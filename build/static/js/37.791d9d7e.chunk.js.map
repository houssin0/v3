{"version":3,"sources":["components/todoList/AddTodoForm.tsx","components/todoList/StyledComponent.ts","components/todoList/Todo.tsx","pages/TodoList.tsx","hooks/useTitle.tsx","components/AddIconButton.tsx","components/DarkTextField.tsx"],"names":["AddTodoForm","props","showAddTodoForm","setShowAddTodoForm","validationSchema","Yup","shape","title","min","required","date","description","useFormik","initialValues","statusColor","mentionClient","onSubmit","values","console","log","errors","handleChange","handleSubmit","touched","setFieldValue","Box","sx","marginTop","display","DarkTextField","fullWidth","name","placeholder","value","onChange","helperText","error","Boolean","mb","DatePicker","newDate","renderInput","params","color","rows","multiline","padding","paddingY","FlexBox","alignItems","FormLabel","component","RadioGroup","row","Radio","size","Button","variant","type","width","onClick","backgroundColor","DroppableWrapper","styled","maxHeight","minHeight","overflow","todoList","height","marginRight","borderRadius","id","author","image","viewColumns","todo","todos","slice","progress","done","Todo","useState","columns","setColumns","t","useTranslation","Grid","container","spacing","onDragEnd","result","destination","source","droppableId","index","sourceColumn","destColumn","sourceItems","destItems","splice","removed","column","copiedItems","Object","entries","map","columnId","item","xs","sm","lg","Card","marginY","Add","provided","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","style","boxShadow","marginBottom","justifyContent","IconButton","MoreHoriz","textAlign","pt","pb","fontWeight","mt","py","LinearProgress","AvatarGroup","UkoAvatar","alt","src","AddIconButton","marginLeft","TodoList","useTitle","text","useContext","TitleContext","setTitle","useEffect","p","border","borderColor","fontSize","StyledDarkTextField","TextField","theme","palette","primary","main","borderWidth","mode","secondary","divider"],"mappings":"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","file":"static/js/37.791d9d7e.chunk.js","sourcesContent":["import { DatePicker } from \"@mui/lab\";\nimport { Box, Button, FormLabel, Radio, RadioGroup } from \"@mui/material\";\nimport DarkTextField from \"components/DarkTextField\";\nimport FlexBox from \"components/FlexBox\";\nimport { useFormik } from \"formik\";\nimport { Dispatch, FC } from \"react\";\nimport * as Yup from \"yup\";\n\n// component props interface\ninterface AddTodoFormProps {\n  showAddTodoForm: boolean;\n  setShowAddTodoForm: Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst AddTodoForm: FC<AddTodoFormProps> = (props) => {\n  const { showAddTodoForm, setShowAddTodoForm } = props;\n\n  // form field validation\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().min(3, \"Too Short\").required(\"Title is Required!\"),\n    date: Yup.date().required(\"Date is Required!\"),\n    description: Yup.string()\n      .min(10, \"Too Short\")\n      .required(\"Description is Required!\"),\n  });\n\n  const initialValues = {\n    title: \"\",\n    date: \"\",\n    description: \"\",\n    statusColor: \"#61A9FF\",\n    mentionClient: \"\",\n  };\n\n  const { errors, values, handleChange, handleSubmit, touched, setFieldValue } =\n    useFormik({\n      initialValues,\n      validationSchema,\n      onSubmit: (values) => {\n        console.log(values);\n        setShowAddTodoForm(false);\n      },\n    });\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Box\n        sx={{\n          marginTop: 2,\n          display: showAddTodoForm ? \"auto\" : \"none\",\n        }}\n      >\n        <DarkTextField\n          fullWidth\n          name=\"title\"\n          placeholder=\"Title\"\n          value={values.title}\n          onChange={handleChange}\n          helperText={touched.title && errors.title}\n          error={Boolean(touched.title && errors.title)}\n          sx={{ mb: 1 }}\n        />\n\n        <DatePicker\n          value={values.date}\n          onChange={(newDate) => setFieldValue(\"date\", newDate)}\n          renderInput={(params) => (\n            <DarkTextField\n              {...params}\n              name=\"date\"\n              fullWidth\n              error={Boolean(touched.date && errors.date)}\n              helperText={touched.date && errors.date}\n              sx={{\n                mb: 1,\n                \"& .MuiSvgIcon-root\": { color: \"text.disabled\" },\n              }}\n            />\n          )}\n        />\n        <DarkTextField\n          fullWidth\n          name=\"mentionClient\"\n          placeholder=\"@mention Client\"\n          onChange={handleChange}\n          value={values.mentionClient}\n          sx={{ mb: 1 }}\n        />\n        <DarkTextField\n          fullWidth\n          rows={5}\n          multiline\n          name=\"description\"\n          placeholder=\"Description\"\n          value={values.description}\n          onChange={handleChange}\n          error={Boolean(touched.description && errors.description)}\n          helperText={touched.description && errors.description}\n          sx={{\n            \"& .MuiOutlinedInput-root\": {\n              padding: 0,\n              \"& textarea\": { paddingY: 1 },\n            },\n          }}\n        />\n\n        <FlexBox alignItems=\"center\" mb=\"1rem\">\n          <FormLabel component=\"small\" sx={{ color: \"text.disabled\" }}>\n            Select Color\n          </FormLabel>\n          <RadioGroup\n            row\n            name=\"statusColor\"\n            value={values.statusColor}\n            onChange={handleChange}\n          >\n            <Radio value=\"#61A9FF\" size=\"small\" color=\"primary\" />\n            <Radio value=\"#2CC5BD\" size=\"small\" color=\"success\" />\n            <Radio value=\"#FD396D\" size=\"small\" color=\"error\" />\n            <Radio value=\"#A798FF\" size=\"small\" color=\"info\" />\n          </RadioGroup>\n        </FlexBox>\n\n        <FlexBox>\n          <Button variant=\"contained\" fullWidth type=\"submit\">\n            Save\n          </Button>\n          <Box width=\"2rem\" />\n          <Button\n            fullWidth\n            onClick={() => setShowAddTodoForm(false)}\n            sx={{\n              backgroundColor: \"secondary.300\",\n              color: \"text.disabled\",\n              \"&:hover\": { backgroundColor: \"secondary.300\" },\n            }}\n          >\n            Cancel\n          </Button>\n        </FlexBox>\n      </Box>\n    </form>\n  );\n};\n\nexport default AddTodoForm;\n","import { Box, styled } from \"@mui/material\";\n\nexport const DroppableWrapper = styled(Box)(() => ({\n  maxHeight: \"calc(100% - 53px)\",\n  minHeight: \"calc(100% - 53px)\",\n  padding: \"1rem\",\n  overflow: \"auto\",\n  \"&[data-rbd-droppable-id='todo']\": {\n    maxHeight: \"calc(100% - 129px)\",\n    minHeight: \"calc(100% - 129px)\",\n  },\n}));\n\nexport const ColorDot = styled(Box)<{ color: string }>(({ color }) => ({\n  width: 6,\n  height: 6,\n  marginTop: 6,\n  marginRight: 10,\n  borderRadius: \"50%\",\n  backgroundColor: color,\n}));\n","import { Add, MoreHoriz } from \"@mui/icons-material\";\nimport {\n  AvatarGroup,\n  Box,\n  Button,\n  Card,\n  Grid,\n  IconButton,\n  LinearProgress,\n} from \"@mui/material\";\nimport AddIconButton from \"components/AddIconButton\";\nimport FlexBox from \"components/FlexBox\";\nimport { H3, H5, H6, Paragraph, Small } from \"components/Typography\";\nimport UkoAvatar from \"components/UkoAvatar\";\nimport { FC, useState } from \"react\";\nimport {\n  DragDropContext,\n  Draggable,\n  Droppable,\n  DropResult,\n} from \"react-beautiful-dnd\";\nimport { useTranslation } from \"react-i18next\";\nimport AddTodoForm from \"./AddTodoForm\";\nimport { DroppableWrapper } from \"./StyledComponent\";\n\nconst todoList = [\n  {\n    id: \"01\",\n    title: \"Create Minimal Logo\",\n    date: \"9/17/2021\",\n    description:\n      \"Hey, Pixy can we get on a quick call? i need to show you something. You need to do some work for me ASAP. And you need to do it before Aug 25. Thanks get back to me.\",\n    author: {\n      name: \"Tom Cruise\",\n      image: \"/static/avatar/001-man.svg\",\n    },\n    statusColor: \"primary.main\",\n  },\n  {\n    id: \"02\",\n    title: \"Therapy Session\",\n    date: \"9/17/2021\",\n    description:\n      \"Hey, Pixy can we get on a quick call? i need to show you something. You need to do some work for me ASAP. And you need to do it before Aug 25. Thanks get back to me.\",\n    author: {\n      name: \"Tom Cruise\",\n      image: \"/static/avatar/002-girl.svg\",\n    },\n    statusColor: \"primary.red\",\n  },\n  {\n    id: \"03\",\n    title: \"Create Minimal Logo\",\n    date: \"9/17/2021\",\n    description:\n      \"Hey, Pixy can we get on a quick call? i need to show you something. You need to do some work for me ASAP. And you need to do it before Aug 25. Thanks get back to me.\",\n    author: {\n      name: \"Tom Cruise\",\n      image: \"/static/avatar/005-man-1.svg\",\n    },\n    statusColor: \"primary.main\",\n  },\n  {\n    id: \"04\",\n    title: \"Website UI Design\",\n    date: \"9/17/2021\",\n    description:\n      \"Hey, Pixy can we get on a quick call? i need to show you something. You need to do some work for me ASAP. And you need to do it before Aug 25. Thanks get back to me.\",\n    author: {\n      name: \"Tom Cruise\",\n      image: \"/static/avatar/011-man-2.svg\",\n    },\n    statusColor: \"primary.yellow\",\n  },\n];\n\nconst viewColumns = {\n  todo: {\n    name: \"To do\",\n    todos: todoList.slice(0, 2),\n  },\n  progress: {\n    name: \"In Progress\",\n    todos: [todoList[2]],\n  },\n  done: {\n    name: \"Done\",\n    todos: [todoList[3]],\n  },\n};\n\nconst onDragEnd = (result: DropResult, columns: any, setColumns: any) => {\n  if (!result.destination) return;\n  const { source, destination } = result;\n\n  if (\n    source.droppableId === destination.droppableId &&\n    source.index === destination.index\n  ) {\n    return;\n  }\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.todos];\n    const destItems = [...destColumn.todos];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...sourceColumn,\n        todos: sourceItems,\n      },\n      [destination.droppableId]: {\n        ...destColumn,\n        todos: destItems,\n      },\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.todos];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...column,\n        todos: copiedItems,\n      },\n    });\n  }\n};\n\nconst Todo: FC = () => {\n  const [columns, setColumns] = useState(viewColumns);\n  const [showAddTodoForm, setShowAddTodoForm] = useState(false);\n  const { t } = useTranslation();\n\n  return (\n    <Grid container spacing={3}>\n      <DragDropContext\n        onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\n      >\n        {Object.entries(columns).map(([columnId, column], index) => {\n          return (\n            <Grid item xs={12} sm={6} lg={4} key={index}>\n              <Card sx={{ height: \"100%\", maxHeight: 700 }}>\n                {columnId === \"todo\" ? (\n                  <Box padding=\"1rem\">\n                    <H5>{t(column.name)}</H5>\n                    <Button\n                      fullWidth\n                      variant=\"contained\"\n                      onClick={() => setShowAddTodoForm(true)}\n                      sx={{\n                        marginY: \"1rem\",\n                        display: showAddTodoForm ? \"none\" : \"auto\",\n                      }}\n                    >\n                      <Add />\n                    </Button>\n                    <AddTodoForm\n                      showAddTodoForm={showAddTodoForm}\n                      setShowAddTodoForm={setShowAddTodoForm}\n                    />\n                  </Box>\n                ) : (\n                  <H5 padding=\"1rem\">{t(column.name)}</H5>\n                )}\n\n                <Droppable droppableId={columnId}>\n                  {(provided) => {\n                    return (\n                      <DroppableWrapper\n                        {...provided.droppableProps}\n                        ref={provided.innerRef}\n                      >\n                        {column.todos.map((todo, index) => {\n                          return (\n                            <Draggable\n                              draggableId={todo.id}\n                              index={index}\n                              key={todo.id}\n                            >\n                              {(provided) => {\n                                return (\n                                  <Card\n                                    key={todo.id}\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    style={{\n                                      ...provided.draggableProps.style,\n                                    }}\n                                    sx={{\n                                      boxShadow: 2,\n                                      padding: \"1rem\",\n                                      marginBottom: \"1.5rem\",\n                                    }}\n                                  >\n                                    <FlexBox\n                                      alignItems=\"center\"\n                                      justifyContent=\"space-between\"\n                                    >\n                                      <Small>July 2, 2020</Small>\n                                      <IconButton\n                                        sx={{ padding: 0 }}\n                                        // onClick={handleMoreClick}\n                                      >\n                                        <MoreHoriz />\n                                      </IconButton>\n                                    </FlexBox>\n\n                                    <Box\n                                      sx={{\n                                        textAlign: \"center\",\n                                        pt: 6,\n                                        pb: 4,\n                                      }}\n                                    >\n                                      <H3>Web Designing</H3>\n                                      <H6\n                                        color=\"text.disabled\"\n                                        fontWeight={500}\n                                        mt={0.5}\n                                      >\n                                        Prototyping\n                                      </H6>\n                                    </Box>\n\n                                    <FlexBox\n                                      justifyContent=\"space-between\"\n                                      py={1}\n                                    >\n                                      <Paragraph fontWeight={600}>\n                                        Project Progress\n                                      </Paragraph>\n                                      <Paragraph fontWeight={600}>\n                                        32%\n                                      </Paragraph>\n                                    </FlexBox>\n\n                                    <LinearProgress\n                                      value={32}\n                                      variant=\"determinate\"\n                                      sx={{\n                                        \"& .MuiLinearProgress-bar\": {\n                                          backgroundColor: todo.statusColor,\n                                        },\n                                      }}\n                                    />\n\n                                    <FlexBox\n                                      alignItems=\"center\"\n                                      justifyContent=\"space-between\"\n                                      pt=\"1.5rem\"\n                                    >\n                                      <FlexBox alignItems=\"center\">\n                                        <AvatarGroup>\n                                          <UkoAvatar\n                                            alt=\"Remy Sharp\"\n                                            src=\"/static/avatar/001-man.svg\"\n                                          />\n                                          <UkoAvatar\n                                            alt=\"Travis Howard\"\n                                            src=\"/static/avatar/002-girl.svg\"\n                                          />\n                                        </AvatarGroup>\n                                        <AddIconButton sx={{ marginLeft: 0 }} />\n                                      </FlexBox>\n\n                                      <Small\n                                        sx={{\n                                          backgroundColor: \"divider\",\n                                          padding: \"5px 15px\",\n                                          borderRadius: \"20px\",\n                                          marginLeft: 1,\n                                          color: \"text.disabled\",\n                                          fontWeight: 600,\n                                        }}\n                                      >\n                                        3 Weeks Left\n                                      </Small>\n                                    </FlexBox>\n                                  </Card>\n                                );\n                              }}\n                            </Draggable>\n                          );\n                        })}\n                        {provided.placeholder}\n                      </DroppableWrapper>\n                    );\n                  }}\n                </Droppable>\n              </Card>\n            </Grid>\n          );\n        })}\n      </DragDropContext>\n    </Grid>\n  );\n};\n\nexport default Todo;\n","import { Box } from \"@mui/material\";\nimport Todo from \"components/todoList/Todo\";\nimport useTitle from \"hooks/useTitle\";\nimport { FC } from \"react\";\n\nconst TodoList: FC = () => {\n  // change navbar title\n  useTitle(\"To Do List\");\n\n  return (\n    <Box pt={2} pb={4}>\n      <Todo />\n    </Box>\n  );\n};\n\nexport default TodoList;\n","import { TitleContext } from \"contexts/TitleContext\";\nimport { useContext, useEffect } from \"react\";\n\nconst useTitle = (text: string) => {\n  const { title, setTitle } = useContext(TitleContext);\n\n  useEffect(() => setTitle(text), [text, setTitle]);\n\n  return title;\n};\n\nexport default useTitle;\n","import { Add } from \"@mui/icons-material\";\nimport { Box, IconButton, IconButtonProps } from \"@mui/material\";\nimport { FC } from \"react\";\n\nconst AddIconButton: FC<IconButtonProps> = (props) => {\n  return (\n    <IconButton sx={{ p: 0 }} {...props}>\n      <Box\n        sx={{\n          width: 36,\n          height: 36,\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          border: \"1px dashed\",\n          borderRadius: \"50%\",\n          borderColor: \"secondary.400\",\n        }}\n      >\n        <Add fontSize=\"small\" sx={{ color: \"secondary.400\" }} />\n      </Box>\n    </IconButton>\n  );\n};\n\nexport default AddIconButton;\n","import { styled, TextField, TextFieldProps } from \"@mui/material\";\nimport { FC } from \"react\";\n\nconst StyledDarkTextField = styled(TextField)<TextFieldProps>(({ theme }) => ({\n  \"&:hover, & .MuiOutlinedInput-root:hover\": {\n    \"& .MuiOutlinedInput-notchedOutline\": {\n      borderColor: theme.palette.primary.main,\n    },\n  },\n  \"& .MuiOutlinedInput-input\": {\n    fontSize: 12,\n    minHeight: 35,\n    fontWeight: 500,\n    borderRadius: \"8px\",\n    padding: \"0px 1rem\",\n    color: theme.palette.text.primary,\n  },\n  \"& .MuiOutlinedInput-notchedOutline\": {\n    borderRadius: \"8px\",\n    borderColor: \"transparent\",\n    borderWidth: \"1px !important\",\n  },\n  \"& .MuiInputBase-root\": {\n    backgroundColor:\n      theme.palette.mode === \"light\"\n        ? theme.palette.text.secondary\n        : theme.palette.divider,\n  },\n}));\n\nconst DarkTextField: FC<TextFieldProps> = (props) => {\n  return <StyledDarkTextField {...props} fullWidth />;\n};\n\nexport default DarkTextField;\n"],"sourceRoot":""}