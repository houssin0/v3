{"version":3,"sources":["components/calendar/AddEventForm.tsx","components/calendar/HeaderToolbar.tsx","pages/Calendar.tsx","hooks/useTitle.tsx"],"names":["AddEventForm","onCancel","fieldValidationSchema","Yup","shape","title","max","required","description","allDay","start","end","when","schema","min","initialValues","color","addMinutes","Date","submit","validationSchema","onSubmit","values","console","log","errors","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldValue","touched","Box","sx","p","Typography","align","gutterBottom","variant","TextField","fullWidth","name","placeholder","value","onBlur","onChange","error","Boolean","helperText","mt","FormControlLabel","control","Switch","checked","label","MobileDateTimePicker","date","renderInput","inputProps","FormHelperText","Divider","alignItems","display","flexGrow","Button","onClick","disabled","ml","type","StyledIconButton","styled","IconButton","padding","HeaderToolbar","onDateNext","onDatePrev","onAddEventForm","theme","useTheme","FlexBox","flexWrap","justifyContent","backgroundColor","breakpoints","down","width","format","ChevronLeft","ChevronRight","fontSize","startIcon","Add","CalendarWrapper","border","marginTop","palette","primary","main","height","background","paper","borderRadius","fontWeight","textAlign","boxShadow","shadows","zIndex","borderTopLeftRadius","borderTopRightRadius","cursor","Calendar","useTitle","calendarRef","useRef","useState","setDate","openAddEventForm","setAddEventForm","handleDatePrevAndNext","direction","calendarEl","current","calendarApi","getApi","prev","next","getDate","pt","pb","Grid","container","spacing","item","xs","Card","dayMaxEventRows","eventDisplay","initialDate","eventClick","args","plugins","dayGridPlugin","interactionPlugin","ref","rerenderDelay","events","headerToolbar","Dialog","open","onClose","text","useContext","TitleContext","setTitle","useEffect"],"mappings":"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","file":"static/js/47.3e841f2f.chunk.js","sourcesContent":["import { MobileDateTimePicker } from \"@mui/lab\";\nimport {\n  Box,\n  Button,\n  Divider,\n  FormControlLabel,\n  FormHelperText,\n  Switch,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { addMinutes } from \"date-fns\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst AddEventForm = ({ onCancel }: any) => {\n  const fieldValidationSchema = Yup.object().shape({\n    title: Yup.string().max(255).required(\"Title is required\"),\n    description: Yup.string().max(5000),\n    allDay: Yup.bool(),\n    start: Yup.date(),\n    end: Yup.date().when(\n      \"start\",\n      (start, schema) =>\n        start && schema.min(start, \"End date must be later than start date\")\n    ),\n  });\n\n  const initialValues = {\n    allDay: false,\n    color: \"\",\n    description: \"\",\n    end: addMinutes(new Date(), 30),\n    start: new Date(),\n    title: \"\",\n    submit: null,\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={fieldValidationSchema}\n      onSubmit={(values) => {\n        console.log(values);\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue,\n        touched,\n        values,\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <Box sx={{ p: 3 }}>\n            <Typography\n              align=\"center\"\n              color=\"textPrimary\"\n              gutterBottom\n              variant=\"h5\"\n            >\n              Add Event\n            </Typography>\n          </Box>\n          <Box sx={{ p: 3 }}>\n            <TextField\n              fullWidth\n              name=\"title\"\n              placeholder=\"Event Title\"\n              value={values.title}\n              onBlur={handleBlur}\n              onChange={handleChange}\n              error={Boolean(touched.title && errors.title)}\n              helperText={touched.title && errors.title}\n            />\n            <Box sx={{ mt: 2 }}>\n              <TextField\n                fullWidth\n                name=\"description\"\n                placeholder=\"Event Description\"\n                value={values.description}\n                onBlur={handleBlur}\n                onChange={handleChange}\n                error={Boolean(touched.description && errors.description)}\n                helperText={touched.description && errors.description}\n              />\n            </Box>\n            <Box sx={{ mt: 2 }}>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={values.allDay}\n                    color=\"primary\"\n                    name=\"allDay\"\n                    onChange={handleChange}\n                  />\n                }\n                label=\"All day\"\n              />\n            </Box>\n            <Box sx={{ mt: 2 }}>\n              <MobileDateTimePicker\n                label=\"Start date\"\n                onChange={(date) => setFieldValue(\"start\", date)}\n                renderInput={(inputProps) => (\n                  <TextField fullWidth variant=\"outlined\" {...inputProps} />\n                )}\n                value={values.start}\n              />\n            </Box>\n            <Box sx={{ mt: 2 }}>\n              <MobileDateTimePicker\n                label=\"End date\"\n                onChange={(date) => setFieldValue(\"end\", date)}\n                renderInput={(inputProps) => (\n                  <TextField fullWidth variant=\"outlined\" {...inputProps} />\n                )}\n                value={values.end}\n              />\n            </Box>\n            {Boolean(touched.end && errors.end) && (\n              <Box sx={{ mt: 2 }}>\n                <FormHelperText error>{errors.end}</FormHelperText>\n              </Box>\n            )}\n          </Box>\n          <Divider />\n          <Box\n            sx={{\n              alignItems: \"center\",\n              display: \"flex\",\n              p: 2,\n            }}\n          >\n            <Box sx={{ flexGrow: 1 }} />\n            <Button color=\"primary\" onClick={onCancel} variant=\"text\">\n              Cancel\n            </Button>\n            <Button\n              color=\"primary\"\n              disabled={isSubmitting}\n              sx={{ ml: 1 }}\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Confirm\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddEventForm;\n","import { Add, ChevronLeft, ChevronRight } from \"@mui/icons-material\";\nimport { Box, Button, IconButton, styled, useTheme } from \"@mui/material\";\nimport FlexBox from \"components/FlexBox\";\nimport { H3 } from \"components/Typography\";\nimport { format } from \"date-fns\";\nimport { FC } from \"react\";\n\n// component props interface\ninterface HeaderToolbarProps {\n  onDatePrev: () => void;\n  onDateNext: () => void;\n  onAddEventForm: () => void;\n  date: Date;\n}\n\nconst StyledIconButton = styled(IconButton)(() => ({\n  padding: 0,\n}));\n\nconst HeaderToolbar: FC<HeaderToolbarProps> = ({\n  onDateNext,\n  onDatePrev,\n  onAddEventForm,\n  date,\n}) => {\n  const theme = useTheme();\n\n  return (\n    <FlexBox\n      flexWrap=\"wrap\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      sx={{\n        padding: \"1rem 1.5rem\",\n        backgroundColor: \"primary.main\",\n      }}\n    >\n      <FlexBox\n        alignItems=\"center\"\n        sx={{\n          [theme.breakpoints.down(490)]: {\n            width: \"100%\",\n            justifyContent: \"space-between\",\n          },\n        }}\n      >\n        <H3 color=\"white\">{format(date, \"MMMM yyyy\")}</H3>\n        <Box ml=\"1rem\">\n          <StyledIconButton onClick={onDatePrev}>\n            <ChevronLeft sx={{ color: \"white\" }} />\n          </StyledIconButton>\n          <StyledIconButton onClick={onDateNext}>\n            <ChevronRight sx={{ color: \"white\" }} />\n          </StyledIconButton>\n        </Box>\n      </FlexBox>\n\n      <Button\n        sx={{\n          fontSize: 12,\n          color: \"primary.main\",\n          backgroundColor: \"white\",\n          \"&:hover\": { backgroundColor: \"white\" },\n          [theme.breakpoints.down(490)]: { width: \"100%\", mt: 1 },\n        }}\n        startIcon={<Add />}\n        onClick={onAddEventForm}\n      >\n        Add Event\n      </Button>\n    </FlexBox>\n  );\n};\n\nexport default HeaderToolbar;\n","import FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { Box, Card, Dialog, Grid, styled } from \"@mui/material\";\nimport AddEventForm from \"components/calendar/AddEventForm\";\nimport HeaderToolbar from \"components/calendar/HeaderToolbar\";\nimport useTitle from \"hooks/useTitle\";\nimport { FC, useRef, useState } from \"react\";\n\n// styled component\nconst CalendarWrapper = styled(Box)(({ theme }) => ({\n  padding: \"1.5rem\",\n  \"& .fc-theme-standard td, & .fc-theme-standard th\": {\n    border: \"none\",\n  },\n  \"& .fc-theme-standard, & .fc-scrollgrid\": {\n    border: \"none !important\",\n  },\n  \"& .fc .fc-scroller-harness-liquid\": {\n    marginTop: \"1rem\",\n  },\n  \"& .fc th\": {\n    color: theme.palette.primary.main,\n  },\n  \"& .fc-daygrid-day-top\": {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"inherit\",\n  },\n  \"& .fc .fc-daygrid-day.fc-day-today\": {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.background.paper,\n    borderRadius: \"8px\",\n  },\n  \"& .fc-daygrid-day-number\": {\n    fontWeight: 600,\n  },\n  \"& .fc-h-event\": {\n    backgroundColor: theme.palette.primary.main,\n    border: \"none\",\n    textAlign: \"center\",\n  },\n  \"& .fc-daygrid-day-bottom a\": {\n    backgroundColor: theme.palette.primary.main,\n    display: \"block\",\n    textAlign: \"center\",\n    color: theme.palette.background.paper,\n    fontSize: 10,\n    fontWeight: 500,\n  },\n  \"& .fc .fc-popover\": {\n    border: \"none\",\n    borderRadius: \"8px\",\n    boxShadow: theme.shadows[1],\n    zIndex: 111,\n  },\n  \"& .fc .fc-popover-header\": {\n    backgroundColor: theme.palette.primary.main,\n    color: \"white\",\n    fontSize: 12,\n    fontWeight: 600,\n    borderTopLeftRadius: \"8px\",\n    borderTopRightRadius: \"8px\",\n  },\n  \"& .fc .fc-daygrid-event-harness\": {\n    padding: 3,\n    cursor: \"pointer\",\n  },\n}));\n\nconst Calendar: FC = () => {\n  // change navbar title\n  useTitle(\"Calendar\");\n\n  const calendarRef = useRef(null);\n  const [date, setDate] = useState(new Date());\n  const [openAddEventForm, setAddEventForm] = useState(false);\n\n  // month change handler\n  const handleDatePrevAndNext = (direction: string) => {\n    const calendarEl: any = calendarRef.current;\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      if (direction === \"prev\") calendarApi.prev();\n      if (direction === \"next\") calendarApi.next();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleEventSelect = (args: any) => {\n    console.log(args);\n    setAddEventForm(true);\n  };\n\n  return (\n    <Box pt={2} pb={4}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Card>\n            <HeaderToolbar\n              date={date}\n              onDatePrev={() => handleDatePrevAndNext(\"prev\")}\n              onDateNext={() => handleDatePrevAndNext(\"next\")}\n              onAddEventForm={() => setAddEventForm(true)}\n            />\n            <CalendarWrapper>\n              <FullCalendar\n                dayMaxEventRows={0}\n                eventDisplay=\"block\"\n                initialDate={date}\n                eventClick={handleEventSelect}\n                plugins={[dayGridPlugin, interactionPlugin]}\n                ref={calendarRef}\n                height={600}\n                rerenderDelay={10}\n                events={[\n                  { title: \"Weekly Meeting With HR\", date: \"2021-09-21\" },\n                  { title: \"Weekly Meeting With HR\", date: \"2021-09-21\" },\n                ]}\n                headerToolbar={false}\n              />\n            </CalendarWrapper>\n          </Card>\n\n          <Dialog\n            fullWidth\n            open={openAddEventForm}\n            onClose={() => setAddEventForm(false)}\n          >\n            <AddEventForm onCancel={() => setAddEventForm(false)} />\n          </Dialog>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Calendar;\n","import { TitleContext } from \"contexts/TitleContext\";\nimport { useContext, useEffect } from \"react\";\n\nconst useTitle = (text: string) => {\n  const { title, setTitle } = useContext(TitleContext);\n\n  useEffect(() => setTitle(text), [text, setTitle]);\n\n  return title;\n};\n\nexport default useTitle;\n"],"sourceRoot":""}