{"version":3,"sources":["../node_modules/@mui/icons-material/esm/PhotoCamera.js","pages/userManagement/AddNewUser.tsx","hooks/useTitle.tsx"],"names":["createSvgIcon","_jsx","cx","cy","r","d","ButtonWrapper","styled","Box","theme","width","height","display","borderRadius","alignItems","justifyContent","backgroundColor","palette","mode","secondary","alpha","primary","UploadButton","border","borderColor","background","paper","SwitchWrapper","marginTop","AddNewUser","useTitle","validationSchema","Yup","shape","fullName","required","email","phone","min","country","state","city","address","zip","about","useFormik","initialValues","onSubmit","values","errors","handleChange","handleSubmit","touched","pt","pb","Card","sx","padding","Grid","container","spacing","item","md","xs","boxShadow","minHeight","flexDirection","htmlFor","accept","id","type","style","IconButton","component","PhotoCamera","fontSize","color","maxWidth","lineHeight","textAlign","marginBottom","fontWeight","Switch","defaultChecked","sm","LightTextField","fullWidth","name","placeholder","value","onChange","error","Boolean","helperText","multiline","rows","Button","variant","text","useContext","TitleContext","title","setTitle","useEffect"],"mappings":"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","file":"static/js/50.d5812cc5.chunk.js","sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"3.2\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 2 7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"\n}, \"1\")], 'PhotoCamera');","import { PhotoCamera } from \"@mui/icons-material\";\nimport {\n  alpha,\n  Box,\n  Button,\n  Card,\n  Grid,\n  IconButton,\n  styled,\n  Switch,\n} from \"@mui/material\";\nimport LightTextField from \"components/LightTextField\";\nimport { Small, Tiny } from \"components/Typography\";\nimport { useFormik } from \"formik\";\nimport useTitle from \"hooks/useTitle\";\nimport { FC } from \"react\";\nimport * as Yup from \"yup\";\n\n// styled components\nconst ButtonWrapper = styled(Box)(({ theme }) => ({\n  width: 100,\n  height: 100,\n  display: \"flex\",\n  borderRadius: \"50%\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  backgroundColor:\n    theme.palette.mode === \"light\"\n      ? theme.palette.secondary[200]\n      : alpha(theme.palette.primary[100], 0.1),\n}));\n\nconst UploadButton = styled(Box)(({ theme }) => ({\n  width: 50,\n  height: 50,\n  display: \"flex\",\n  borderRadius: \"50%\",\n  border: \"2px solid\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  borderColor: theme.palette.background.paper,\n  backgroundColor:\n    theme.palette.mode === \"light\"\n      ? theme.palette.secondary[400]\n      : alpha(theme.palette.background.paper, 0.9),\n}));\n\nconst SwitchWrapper = styled(Box)(() => ({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  width: \"100%\",\n  marginTop: 10,\n}));\n\nconst AddNewUser: FC = () => {\n  // change navbar title\n  useTitle(\"Add New User\");\n\n  const initialValues = {\n    fullName: \"\",\n    email: \"\",\n    phone: \"\",\n    country: \"\",\n    state: \"\",\n    city: \"\",\n    address: \"\",\n    zip: \"\",\n    about: \"\",\n  };\n\n  const validationSchema = Yup.object().shape({\n    fullName: Yup.string().required(\"Name is Required!\"),\n    email: Yup.string().email().required(\"Email is Required!\"),\n    phone: Yup.number().min(8).required(\"Phone is Required!\"),\n    country: Yup.string().required(\"Country is Required!\"),\n    state: Yup.string().required(\"State is Required!\"),\n    city: Yup.string().required(\"City is Required!\"),\n    address: Yup.string().required(\"Address is Required!\"),\n    zip: Yup.string().required(\"Zip is Required!\"),\n    about: Yup.string().required(\"About is Required!\"),\n  });\n\n  const { values, errors, handleChange, handleSubmit, touched } = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit: () => {},\n  });\n\n  return (\n    <Box pt={2} pb={4}>\n      <Card sx={{ padding: 4 }}>\n        <Grid container spacing={3}>\n          <Grid item md={4} xs={12}>\n            <Card\n              sx={{\n                padding: 3,\n                boxShadow: 2,\n                minHeight: 400,\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n              }}\n            >\n              <ButtonWrapper>\n                <UploadButton>\n                  <label htmlFor=\"upload-btn\">\n                    <input\n                      accept=\"image/*\"\n                      id=\"upload-btn\"\n                      type=\"file\"\n                      style={{ display: \"none\" }}\n                    />\n                    <IconButton component=\"span\">\n                      <PhotoCamera sx={{ fontSize: 26, color: \"white\" }} />\n                    </IconButton>\n                  </label>\n                </UploadButton>\n              </ButtonWrapper>\n\n              <Small\n                marginTop={2}\n                maxWidth={200}\n                lineHeight={1.9}\n                display=\"block\"\n                textAlign=\"center\"\n                color=\"text.disabled\"\n              >\n                Allowed *.jpeg, *.jpg, *.png, *.gif max size of 3.1 MB\n              </Small>\n\n              <Box maxWidth={250} marginTop={5} marginBottom={1}>\n                <SwitchWrapper>\n                  <Small display=\"block\" fontWeight={600}>\n                    Public Profile\n                  </Small>\n                  <Switch defaultChecked />\n                </SwitchWrapper>\n\n                <SwitchWrapper>\n                  <Small display=\"block\" fontWeight={600}>\n                    Banned\n                  </Small>\n                  <Switch defaultChecked />\n                </SwitchWrapper>\n                <Tiny display=\"block\" color=\"text.disabled\" fontWeight={500}>\n                  Apply disable account\n                </Tiny>\n\n                <SwitchWrapper>\n                  <Small display=\"block\" fontWeight={600}>\n                    Email Verified\n                  </Small>\n                  <Switch defaultChecked />\n                </SwitchWrapper>\n                <Tiny display=\"block\" color=\"text.disabled\" fontWeight={500}>\n                  Disabling this will automatically send the user a verification\n                  email\n                </Tiny>\n              </Box>\n            </Card>\n          </Grid>\n          <Grid item md={8} xs={12}>\n            <Card sx={{ padding: 3, boxShadow: 2 }}>\n              <form onSubmit={handleSubmit}>\n                <Grid container spacing={3}>\n                  <Grid item sm={6} xs={12}>\n                    <LightTextField\n                      fullWidth\n                      name=\"fullName\"\n                      placeholder=\"Full Name\"\n                      value={values.fullName}\n                      onChange={handleChange}\n                      error={Boolean(touched.fullName && errors.fullName)}\n                      helperText={touched.fullName && errors.fullName}\n                    />\n                  </Grid>\n\n                  <Grid item sm={6} xs={12}>\n                    <LightTextField\n                      fullWidth\n                      name=\"email\"\n                      placeholder=\"Email Address\"\n                      value={values.email}\n                      onChange={handleChange}\n                      error={Boolean(touched.email && errors.email)}\n                      helperText={touched.email && errors.email}\n                    />\n                  </Grid>\n\n                  <Grid item sm={6} xs={12}>\n                    <LightTextField\n                      fullWidth\n                      name=\"phone\"\n                      placeholder=\"Phone Number\"\n                      value={values.phone}\n                      onChange={handleChange}\n                      error={Boolean(touched.phone && errors.phone)}\n                      helperText={touched.phone && errors.phone}\n                    />\n                  </Grid>\n\n                  <Grid item sm={6} xs={12}>\n                    <LightTextField\n                      fullWidth\n                      name=\"country\"\n                      placeholder=\"Country\"\n                      value={values.country}\n                      onChange={handleChange}\n                      error={Boolean(touched.country && errors.country)}\n                      helperText={touched.country && errors.country}\n                    />\n                  </Grid>\n\n                  <Grid item sm={6} xs={12}>\n                    <LightTextField\n                      fullWidth\n                      name=\"state\"\n                      placeholder=\"State/Region\"\n                      value={values.state}\n                      onChange={handleChange}\n                      error={Boolean(touched.state && errors.state)}\n                      helperText={touched.state && errors.state}\n                    />\n                  </Grid>\n\n                  <Grid item sm={6} xs={12}>\n                    <LightTextField\n                      fullWidth\n                      name=\"city\"\n                      placeholder=\"City\"\n                      value={values.city}\n                      onChange={handleChange}\n                      error={Boolean(touched.city && errors.city)}\n                      helperText={touched.city && errors.city}\n                    />\n                  </Grid>\n\n                  <Grid item sm={6} xs={12}>\n                    <LightTextField\n                      fullWidth\n                      name=\"address\"\n                      placeholder=\"Address\"\n                      value={values.address}\n                      onChange={handleChange}\n                      error={Boolean(touched.address && errors.address)}\n                      helperText={touched.address && errors.address}\n                    />\n                  </Grid>\n\n                  <Grid item sm={6} xs={12}>\n                    <LightTextField\n                      fullWidth\n                      name=\"zip\"\n                      placeholder=\"Zip/Code\"\n                      value={values.zip}\n                      onChange={handleChange}\n                      error={Boolean(touched.zip && errors.zip)}\n                      helperText={touched.zip && errors.zip}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <LightTextField\n                      multiline\n                      fullWidth\n                      rows={10}\n                      name=\"about\"\n                      placeholder=\"About\"\n                      value={values.about}\n                      onChange={handleChange}\n                      error={Boolean(touched.about && errors.about)}\n                      helperText={touched.about && errors.about}\n                      sx={{\n                        \"& .MuiOutlinedInput-root textarea\": { padding: 0 },\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Button type=\"submit\" variant=\"contained\">\n                      Create User\n                    </Button>\n                  </Grid>\n                </Grid>\n              </form>\n            </Card>\n          </Grid>\n        </Grid>\n      </Card>\n    </Box>\n  );\n};\n\nexport default AddNewUser;\n","import { TitleContext } from \"contexts/TitleContext\";\nimport { useContext, useEffect } from \"react\";\n\nconst useTitle = (text: string) => {\n  const { title, setTitle } = useContext(TitleContext);\n\n  useEffect(() => setTitle(text), [text, setTitle]);\n\n  return title;\n};\n\nexport default useTitle;\n"],"sourceRoot":""}