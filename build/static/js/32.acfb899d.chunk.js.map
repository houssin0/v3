{"version":3,"sources":["components/invoice/columnShape.tsx","components/invoice/fakeData.ts","pages/invoice/InvoiceList.tsx","hooks/useTitle.tsx","icons/SearchIcon.tsx","components/SearchInput.tsx","components/dataTable/dataTableV2/styledComponents.ts","../node_modules/@mui/system/esm/Box/Box.js","../node_modules/@mui/icons-material/esm/ArrowRightAlt.js","components/adminEcommerce/CustomTable.tsx"],"names":["InvoiceColumnShape","Header","accessor","minWidth","Cell","row","original","avatar","name","position","FlexBox","alignItems","UkoAvatar","src","alt","sx","mr","flexDirection","color","value","maxWidth","backgroundColor","toLowerCase","borderRadius","padding","invoiceFakeData","date","format","Date","id","amount","status","InvoiceList","useTitle","theme","useTheme","navigate","useNavigate","t","useTranslation","Box","pt","pb","justifyContent","flexWrap","SearchInput","placeholder","Button","variant","onClick","breakpoints","down","width","mt","CustomTable","showFooter","hidePagination","columnShape","data","rowClick","rowData","state","text","useContext","TitleContext","title","setTitle","useEffect","SearchIcon","props","viewBox","d","fill","StyledInputBase","styled","InputBase","height","fontSize","fontWeight","border","borderColor","palette","mode","secondary","divider","primary","background","paper","startAdornment","marginRight","StyledTableBodyRow","TableRow","selected_row","alpha","light","top","left","content","main","StyledPagination","Pagination","disabled","margin","StyledSearchInput","StyledSearchIcon","marginLeft","createBox","createSvgIcon","_jsx","tableData","useMemo","columns","useTable","useSortBy","useExpanded","usePagination","useRowSelect","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","pageOptions","gotoPage","Table","borderSpacing","borderCollapse","TableHead","map","headerGroup","getHeaderGroupProps","headers","column","TableCell","getHeaderProps","getSortByToggleProps","paddingY","borderBottom","textAlign","render","TableBody","getRowProps","cursor","borderLeft","borderTopLeftRadius","borderBottomLeftRadius","borderRight","borderTopRightRadius","borderBottomRightRadius","cells","cell","getCellProps","borderTop","Stack","marginY","count","length","shape","onChange","_e","currentPageNo","ButtonBase","disableRipple","ArrowRightAlt"],"mappings":"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","file":"static/js/32.acfb899d.chunk.js","sourcesContent":["import FlexBox from \"components/FlexBox\";\nimport { H6, Small, Tiny } from \"components/Typography\";\nimport UkoAvatar from \"components/UkoAvatar\";\n\nconst InvoiceColumnShape = [\n  {\n    Header: \"Client\",\n    accessor: \"client\",\n    minWidth: 200,\n    Cell: ({ row }: any) => {\n      const { avatar, name, position } = row.original;\n      return (\n        <FlexBox alignItems=\"center\">\n          <UkoAvatar src={avatar} alt={name} sx={{ mr: 1 }} />\n          <FlexBox flexDirection=\"column\">\n            <H6 color=\"text.primary\">{name}</H6>\n            <Tiny color=\"text.disabled\">{position}</Tiny>\n          </FlexBox>\n        </FlexBox>\n      );\n    },\n  },\n  {\n    Header: \"Name\",\n    accessor: \"name\",\n    minWidth: 200,\n  },\n  {\n    Header: \"Date\",\n    accessor: \"date\",\n    minWidth: 150,\n  },\n  {\n    Header: \"Amount\",\n    accessor: \"amount\",\n    minWidth: 150,\n    Cell: ({ value }: any) => <Small>${value}</Small>,\n  },\n  {\n    Header: \"Status\",\n    accessor: \"status\",\n    minWidth: 130,\n    maxWidth: 130,\n    Cell: ({ value }: any) => (\n      <Small\n        sx={{\n          backgroundColor:\n            value.toLowerCase() === \"paid\" ? \"success.main\" : \"error.main\",\n          color: \"background.paper\",\n          borderRadius: 10,\n          padding: \".2rem 1rem\",\n        }}\n      >\n        {value}\n      </Small>\n    ),\n  },\n];\n\nexport default InvoiceColumnShape;\n","import { format } from \"date-fns\";\n\nexport const invoiceFakeData = [\n  {\n    date: format(new Date(2021, 11, 2), \"MMM dd, yyyy\"),\n    id: \"615193a4c7e1363df77b9929\",\n    name: \"Natalie Dormer\",\n    position: \"UI Designer\",\n    amount: 450,\n    avatar: \"/static/avatar/001-man.svg\",\n    status: \"Unpaid\",\n  },\n  {\n    date: format(new Date(2021, 10, 2), \"MMM dd, yyyy\"),\n    id: \"615193bab7b256189c6fe997\",\n    name: \"Kyle Williams\",\n    position: \"Developer\",\n    amount: 280,\n    avatar: \"/static/avatar/005-man-1.svg\",\n    status: \"Unpaid\",\n  },\n  {\n    date: format(new Date(2021, 10, 2), \"MMM dd, yyyy\"),\n    id: \"615193d64696d4665abb8ea5\",\n    name: \"Alan Mask\",\n    position: \"Marketer\",\n    amount: 120,\n    avatar: \"/static/avatar/014-man-3.svg\",\n    status: \"Unpaid\",\n  },\n];\n","import { Button, useTheme } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport CustomTable from \"components/adminEcommerce/CustomTable\";\nimport FlexBox from \"components/FlexBox\";\nimport InvoiceColumnShape from \"components/invoice/columnShape\";\nimport { invoiceFakeData } from \"components/invoice/fakeData\";\nimport SearchInput from \"components/SearchInput\";\nimport useTitle from \"hooks/useTitle\";\nimport { FC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst InvoiceList: FC = () => {\n  // change navbar title\n  useTitle(\"Invoice List\");\n\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n\n  const handleRowClick = (rowData: object) => () => {\n    navigate(\"/dashboard/invoice-details\", { state: rowData });\n  };\n\n  return (\n    <Box pt={2} pb={4}>\n      <FlexBox\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        flexWrap=\"wrap\"\n      >\n        <SearchInput placeholder=\"Find Invoice\" />\n        <Button\n          variant=\"contained\"\n          onClick={() => navigate(\"/dashboard/add-invoice\")}\n          sx={{\n            [theme.breakpoints.down(500)]: { width: \"100%\", mt: 1 },\n          }}\n        >\n          {t(\"Add New\")}\n        </Button>\n      </FlexBox>\n\n      <Box mt={2}>\n        <CustomTable\n          showFooter\n          hidePagination\n          columnShape={InvoiceColumnShape}\n          data={invoiceFakeData}\n          rowClick={handleRowClick}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default InvoiceList;\n","import { TitleContext } from \"contexts/TitleContext\";\nimport { useContext, useEffect } from \"react\";\n\nconst useTitle = (text: string) => {\n  const { title, setTitle } = useContext(TitleContext);\n\n  useEffect(() => setTitle(text), [text, setTitle]);\n\n  return title;\n};\n\nexport default useTitle;\n","import { SvgIcon, SvgIconProps } from \"@mui/material\";\n\nconst SearchIcon = (props: SvgIconProps) => {\n  return (\n    <SvgIcon viewBox=\"0 0 20 20\" {...props}>\n      <path\n        d=\"M8.80758 0C3.95121 0 0 3.95121 0 8.80758C0 13.6642 3.95121 17.6152 8.80758 17.6152C13.6642 17.6152 17.6152 13.6642 17.6152 8.80758C17.6152 3.95121 13.6642 0 8.80758 0ZM8.80758 15.9892C4.84769 15.9892 1.62602 12.7675 1.62602 8.80762C1.62602 4.84773 4.84769 1.62602 8.80758 1.62602C12.7675 1.62602 15.9891 4.84769 15.9891 8.80758C15.9891 12.7675 12.7675 15.9892 8.80758 15.9892Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M19.7617 18.6124L15.1005 13.9511C14.7829 13.6335 14.2685 13.6335 13.9509 13.9511C13.6332 14.2684 13.6332 14.7834 13.9509 15.1007L18.6121 19.762C18.7709 19.9208 18.9788 20.0002 19.1869 20.0002C19.3948 20.0002 19.6029 19.9208 19.7617 19.762C20.0794 19.4446 20.0794 18.9297 19.7617 18.6124Z\"\n        fill=\"currentColor\"\n      />\n    </SvgIcon>\n  );\n};\n\nexport default SearchIcon;\n","import { InputBase, InputBaseProps, styled } from \"@mui/material\";\nimport SearchIcon from \"icons/SearchIcon\";\nimport { FC } from \"react\";\n\n// styled component\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  height: 45,\n  fontSize: 13,\n  width: \"100%\",\n  maxWidth: 270,\n  fontWeight: 500,\n  padding: \"0 1rem\",\n  borderRadius: \"8px\",\n  border: \"1px solid \",\n  borderColor:\n    theme.palette.mode === \"light\"\n      ? theme.palette.secondary[300]\n      : theme.palette.divider,\n\n  color: theme.palette.text.primary,\n  backgroundColor: theme.palette.background.paper,\n  [theme.breakpoints.down(500)]: { maxWidth: \"100%\" },\n}));\n\nconst SearchInput: FC<InputBaseProps> = (props) => {\n  return (\n    <StyledInputBase\n      {...props}\n      startAdornment={\n        <SearchIcon\n          sx={{\n            fontSize: 16,\n            marginRight: 1,\n            color: \"text.disabled\",\n          }}\n        />\n      }\n    />\n  );\n};\n\nexport default SearchInput;\n","import { alpha, InputBase, Pagination, styled, TableRow } from \"@mui/material\";\nimport SearchIcon from \"icons/SearchIcon\";\n\nexport const StyledTableBodyRow = styled(TableRow)<{\n  selected_row: string;\n}>(({ theme, selected_row }) =>\n  selected_row === \"select\"\n    ? {\n        backgroundColor: alpha(theme.palette.primary.light, 0.5),\n        position: \"relative\",\n        \"&::after\": {\n          top: 0,\n          left: 0,\n          width: \"3px\",\n          content: '\"\"',\n          height: \"100%\",\n          position: \"absolute\",\n          backgroundColor: theme.palette.primary.main,\n        },\n      }\n    : {}\n);\n\nexport const StyledPagination = styled(Pagination)(({ theme }) => ({\n  \"& .MuiPaginationItem-root\": {\n    fontSize: 12,\n    fontWeight: 500,\n    color: theme.palette.text.disabled,\n  },\n  \"& .MuiPaginationItem-page:hover\": {\n    borderRadius: 20,\n    backgroundColor: \"transparent\",\n    color: theme.palette.primary.main,\n    border: `1px solid ${theme.palette.primary.main}`,\n  },\n  \"& .MuiPaginationItem-page.Mui-selected\": {\n    borderRadius: 20,\n    backgroundColor: \"transparent\",\n    color: theme.palette.primary.main,\n    border: `1px solid ${theme.palette.primary.main}`,\n  },\n  \"& .MuiPaginationItem-previousNext\": {\n    margin: 10,\n    borderRadius: 20,\n    color: theme.palette.primary.main,\n    border: `1px solid ${theme.palette.primary.main}`,\n    \"&:hover\": { backgroundColor: \"transparent\" },\n  },\n}));\n\nexport const StyledSearchInput = styled(InputBase)(({ theme }) => ({\n  height: 40,\n  fontSize: 12,\n  maxWidth: 450,\n  width: \"100%\",\n  fontWeight: 500,\n  padding: \"0.5rem\",\n  borderRadius: \"4px\",\n  backgroundColor: \"white\",\n  color: theme.palette.text.primary,\n}));\n\nexport const StyledSearchIcon = styled(SearchIcon)(({ theme }) => ({\n  fontSize: 16,\n  marginLeft: \"0.5rem\",\n  marginRight: \"0.5rem\",\n  color: theme.palette.primary.main,\n}));\n","import createBox from '../createBox';\nconst Box = createBox();\nexport default Box;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.01 11H4v2h12.01v3L20 12l-3.99-4z\"\n}), 'ArrowRightAlt');","import { ArrowRightAlt } from \"@mui/icons-material\";\nimport {\n  Box,\n  ButtonBase,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  useTheme,\n} from \"@mui/material\";\nimport { StyledPagination } from \"components/dataTable/dataTableV2/styledComponents\";\nimport FlexBox from \"components/FlexBox\";\nimport { H5 } from \"components/Typography\";\nimport { ChangeEvent, FC, useMemo } from \"react\";\nimport {\n  useExpanded,\n  usePagination,\n  useRowSelect,\n  useSortBy,\n  useTable,\n} from \"react-table\";\nimport ScrollBar from \"simplebar-react\";\n\n// component props interface\ninterface CustomTableProps {\n  columnShape: object[];\n  data: object[];\n  rowClick?: (rowData: object) => void;\n  hidePagination?: boolean;\n  showFooter?: boolean;\n}\n\nconst CustomTable: FC<CustomTableProps> = (props) => {\n  const { data, rowClick, showFooter, columnShape, hidePagination } = props;\n  // hooks\n  const theme = useTheme();\n  const tableData: any = useMemo(() => data, [data]);\n  const columns: any = useMemo(() => columnShape, [columnShape]);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    pageOptions,\n    gotoPage,\n  }: any = useTable(\n    {\n      columns,\n      data: tableData,\n    },\n    useSortBy,\n    useExpanded,\n    usePagination,\n    useRowSelect\n  );\n  // handle pagination\n  const handleChange = (_e: ChangeEvent<unknown>, currentPageNo: number) => {\n    gotoPage(currentPageNo - 1);\n  };\n\n  // table border color\n  const borderColor =\n    theme.palette.mode === \"light\" ? \"text.secondary\" : \"divider\";\n\n  return (\n    <Box>\n      <ScrollBar>\n        <Table\n          {...getTableProps()}\n          sx={{\n            borderSpacing: \"0 1rem\",\n            borderCollapse: \"separate\",\n          }}\n        >\n          <TableHead>\n            {headerGroups.map((headerGroup: any) => (\n              <TableRow {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column: any) => (\n                  <TableCell\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\n                    sx={{\n                      paddingY: 0,\n                      fontSize: 13,\n                      fontWeight: 600,\n                      borderBottom: 0,\n                      color: \"text.disabled\",\n                      width: column.width,\n                      minWidth: column.minWidth,\n                      maxWidth: column.maxWidth,\n                      \"&:last-child\": { textAlign: \"center\" },\n                    }}\n                  >\n                    {column.render(\"Header\")}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableHead>\n\n          <TableBody {...getTableBodyProps()}>\n            {page.map((row: any) => {\n              prepareRow(row);\n              return (\n                <TableRow\n                  {...row.getRowProps()}\n                  onClick={rowClick && rowClick(row.original)}\n                  sx={{\n                    backgroundColor: \"background.paper\",\n                    cursor: rowClick ? \"pointer\" : \"unset\",\n                    \"& td:first-of-type\": {\n                      borderLeft: \"1px solid\",\n                      borderTopLeftRadius: \"8px\",\n                      borderBottomLeftRadius: \"8px\",\n                      borderColor,\n                    },\n                    \"& td:last-of-type\": {\n                      textAlign: \"center\",\n                      borderRight: \"1px solid\",\n                      borderTopRightRadius: \"8px\",\n                      borderBottomRightRadius: \"8px\",\n                      borderColor,\n                    },\n                    \"&:last-of-type .MuiTableCell-root\": {\n                      borderBottom:\n                        theme.palette.mode === \"dark\"\n                          ? `1px solid ${theme.palette.divider} !important`\n                          : `1px solid ${theme.palette.text.secondary} !important`,\n                    },\n                  }}\n                >\n                  {row.cells.map((cell: any) => (\n                    <TableCell\n                      {...cell.getCellProps()}\n                      sx={{\n                        fontSize: 13,\n                        fontWeight: 500,\n                        color: \"text.disabled\",\n                        borderTop: \"1px solid\",\n                        borderBottom: \"1px solid\",\n                        borderColor,\n                      }}\n                    >\n                      {cell.render(\"Cell\")}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </ScrollBar>\n\n      {!hidePagination && (\n        <Stack alignItems=\"flex-end\" marginY={1}>\n          <StyledPagination\n            count={pageOptions.length}\n            shape=\"rounded\"\n            onChange={handleChange}\n          />\n        </Stack>\n      )}\n\n      {showFooter && (\n        <FlexBox alignItems=\"center\" justifyContent=\"space-between\">\n          <H5 color=\"text.disabled\">Showing 1-12 of 24 result</H5>\n          <ButtonBase\n            disableRipple\n            sx={{\n              fontSize: 14,\n              fontWeight: 600,\n            }}\n          >\n            See All\n            <ArrowRightAlt sx={{ marginLeft: 0.5 }} />\n          </ButtonBase>\n        </FlexBox>\n      )}\n    </Box>\n  );\n};\n\nexport default CustomTable;\n"],"sourceRoot":""}