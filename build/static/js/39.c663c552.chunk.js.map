{"version":3,"sources":["../node_modules/@mui/icons-material/esm/CameraAlt.js","components/adminEcommerce/AddCustomerModal.tsx","components/adminEcommerce/columnShapes/CustomerColumnShape.tsx","pages/adminEcommerce/CustomerList.tsx","../node_modules/@mui/icons-material/esm/KeyboardArrowDown.js","components/adminEcommerce/TabLabel.tsx"],"names":["createSvgIcon","_jsx","cx","cy","r","d","StyledModalCard","styled","Card","theme","top","left","maxWidth","minWidth","position","padding","boxShadow","shadows","transform","width","breakpoints","down","height","overflow","StyledBadge","Badge","borderRadius","backgroundColor","palette","primary","main","background","paper","StyledMenuItem","MenuItem","fontSize","fontWeight","color","text","disabled","StyledSelect","Select","mode","secondary","divider","AddCustomerModal","open","onClose","edit","data","initialValues","firstName","name","split","lastName","email","location","phone","city","country","state","status","toLowerCase","fieldValidationSchema","Yup","shape","min","required","useFormik","validationSchema","onSubmit","values","console","log","errors","handleChange","handleSubmit","touched","Modal","Box","textAlign","py","overlap","anchorOrigin","vertical","horizontal","badgeContent","htmlFor","type","accept","id","style","display","IconButton","component","CameraAlt","sx","UkoAvatar","alt","src","avatar","Grid","container","spacing","className","item","sm","xs","mb","DarkTextField","placeholder","onChange","value","error","Boolean","helperText","fullWidth","input","InputBase","IconComponent","KeyboardArrowDown","FlexBox","justifyContent","marginTop","Button","variant","onClick","marginRight","borderColor","CustomerColumnShape","Header","accessor","Cell","row","original","alignItems","flexDirection","ml","useState","openModal","setOpenModal","EditIconButton","tabs","label","count","CustomerList","useTitle","t","useTranslation","currentTab","setCurrentTab","addCustomer","setAddCustomer","filteredData","customersFakeData","filter","pt","pb","SearchInput","endIcon","Add","TabContext","TabList","_","newValue","map","Tab","disableRipple","TabLabel","title","total","CustomTable","columnShape","marginLeft"],"mappings":"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","file":"static/js/39.c663c552.chunk.js","sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"3.2\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 2 7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"\n}, \"1\")], 'CameraAlt');","import { CameraAlt, KeyboardArrowDown } from \"@mui/icons-material\";\nimport {\n  Badge,\n  Box,\n  Button,\n  Card,\n  Grid,\n  IconButton,\n  InputBase,\n  MenuItem,\n  Modal,\n  Select,\n  styled,\n} from \"@mui/material\";\nimport DarkTextField from \"components/DarkTextField\";\nimport FlexBox from \"components/FlexBox\";\nimport { H2, H6 } from \"components/Typography\";\nimport UkoAvatar from \"components/UkoAvatar\";\nimport { useFormik } from \"formik\";\nimport { FC } from \"react\";\nimport * as Yup from \"yup\";\n\n// component props interface\ninterface ModalProps {\n  open: boolean;\n  onClose: () => void;\n  edit?: boolean;\n  data?: any;\n}\n\n// styled components\nconst StyledModalCard = styled(Card)(({ theme }) => ({\n  top: \"50%\",\n  left: \"50%\",\n  maxWidth: 700,\n  minWidth: 300,\n  position: \"absolute\",\n  padding: \"1.5rem\",\n  boxShadow: theme.shadows[2],\n  transform: \"translate(-50%, -50%)\",\n  width: \"100%\",\n  [theme.breakpoints.down(\"sm\")]: {\n    \"& .main-form\": {\n      height: 200,\n      overflow: \"auto\",\n    },\n  },\n}));\n\nconst StyledBadge = styled(Badge)(({ theme }) => ({\n  \"& .MuiBadge-badge\": {\n    width: 25,\n    height: 25,\n    borderRadius: \"50%\",\n    backgroundColor: theme.palette.primary.main,\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n  },\n}));\n\nconst StyledMenuItem = styled(MenuItem)(({ theme }) => ({\n  fontSize: 12,\n  fontWeight: 500,\n  color: theme.palette.text.disabled,\n}));\n\nconst StyledSelect = styled(Select)(({ theme }) => ({\n  height: 35,\n  fontSize: 12,\n  padding: \"0 1rem\",\n  borderRadius: \"8px\",\n  color: theme.palette.text.primary,\n  backgroundColor:\n    theme.palette.mode === \"light\"\n      ? theme.palette.secondary[300]\n      : theme.palette.divider,\n\n  \"& .MuiSvgIcon-root\": { color: theme.palette.text.disabled },\n}));\n\nconst AddCustomerModal: FC<ModalProps> = ({ open, onClose, edit, data }) => {\n  const initialValues = {\n    firstName: data?.name.split(\" \")[0] || \"\",\n    lastName: data?.name.split(\" \")[1] || \"\",\n    email: data?.email || \"\",\n    location: data?.location || \"\",\n    phone: data?.phone || \"\",\n    city: \"\",\n    country: \"\",\n    state: \"\",\n    status: data?.status.toLowerCase() || \"active\",\n  };\n\n  const fieldValidationSchema = Yup.object().shape({\n    firstName: Yup.string()\n      .min(3, \"Too Short\")\n      .required(\"First Name is Required!\"),\n    lastName: Yup.string().required(\"Last Name is Required!\"),\n    email: Yup.string().required(\"Email is Required!\"),\n    location: Yup.string().required(\"Location is Required!\"),\n    phone: Yup.string().min(11, \"Too short\").required(\"Phone is Required!\"),\n    country: Yup.string().min(3, \"Too short\").required(\"Country is Required!\"),\n    city: Yup.string().min(3, \"Too short\").required(\"City is Required!\"),\n    state: Yup.string().min(3, \"Too short\").required(\"State is Required!\"),\n  });\n\n  const { values, errors, handleChange, handleSubmit, touched } = useFormik({\n    initialValues,\n    validationSchema: fieldValidationSchema,\n    onSubmit: (values) => {\n      console.log(values);\n    },\n  });\n\n  return (\n    <Modal open={open} onClose={onClose}>\n      <StyledModalCard>\n        <H2>{edit ? \"Edit Product\" : \"Add new Customer\"}</H2>\n\n        <Box textAlign=\"center\" py={3}>\n          <StyledBadge\n            overlap=\"circular\"\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            badgeContent={\n              <label htmlFor=\"icon-button-file\">\n                <input\n                  type=\"file\"\n                  accept=\"image/*\"\n                  id=\"icon-button-file\"\n                  style={{ display: \"none\" }}\n                />\n\n                <IconButton aria-label=\"upload picture\" component=\"span\">\n                  <CameraAlt sx={{ fontSize: 16, color: \"background.paper\" }} />\n                </IconButton>\n              </label>\n            }\n          >\n            <UkoAvatar\n              sx={{ width: 100, height: 100 }}\n              alt=\"Travis Howard\"\n              src={\n                data && edit ? data.avatar : \"/static/user/profile-picture.png\"\n              }\n            />\n          </StyledBadge>\n        </Box>\n\n        <form onSubmit={handleSubmit}>\n          <Grid container spacing={2} className=\"main-form\">\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>First Name</H6>\n              <DarkTextField\n                placeholder=\"John\"\n                name=\"firstName\"\n                onChange={handleChange}\n                value={values.firstName}\n                error={Boolean(errors.firstName && touched.firstName)}\n                helperText={touched.firstName && errors.firstName}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>Last Name</H6>\n              <DarkTextField\n                placeholder=\"Smith\"\n                name=\"lastName\"\n                onChange={handleChange}\n                value={values.lastName}\n                error={Boolean(errors.lastName && touched.lastName)}\n                helperText={touched.lastName && errors.lastName}\n              />\n            </Grid>\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>Email</H6>\n              <DarkTextField\n                placeholder=\"uilib@gmail.com\"\n                name=\"email\"\n                onChange={handleChange}\n                value={values.email}\n                error={Boolean(errors.email && touched.email)}\n                helperText={touched.email && errors.email}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>Location</H6>\n              <DarkTextField\n                placeholder=\"Corner View\"\n                name=\"location\"\n                onChange={handleChange}\n                value={values.location}\n                error={Boolean(errors.location && touched.location)}\n                helperText={touched.location && errors.location}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>Phone</H6>\n              <DarkTextField\n                placeholder=\"+0188000000\"\n                name=\"phone\"\n                onChange={handleChange}\n                value={values.phone}\n                error={Boolean(errors.phone && touched.phone)}\n                helperText={touched.phone && errors.phone}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>City</H6>\n              <DarkTextField\n                placeholder=\"Sylhet\"\n                name=\"city\"\n                onChange={handleChange}\n                value={values.city}\n                error={Boolean(errors.city && touched.city)}\n                helperText={touched.city && errors.city}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>Country</H6>\n              <DarkTextField\n                placeholder=\"Bangladesh\"\n                name=\"country\"\n                onChange={handleChange}\n                value={values.country}\n                error={Boolean(errors.country && touched.country)}\n                helperText={touched.country && errors.country}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>State/Region</H6>\n              <DarkTextField\n                placeholder=\"Asia\"\n                name=\"state\"\n                onChange={handleChange}\n                value={values.state}\n                error={Boolean(errors.state && touched.state)}\n                helperText={touched.state && errors.state}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <H6 mb={1}>Status</H6>\n              <StyledSelect\n                fullWidth\n                name=\"status\"\n                value={values.status}\n                onChange={handleChange}\n                input={<InputBase placeholder=\"Asia\" />}\n                IconComponent={() => <KeyboardArrowDown fontSize=\"small\" />}\n              >\n                <StyledMenuItem value=\"active\">Active</StyledMenuItem>\n                <StyledMenuItem value=\"disabled\">Disabled</StyledMenuItem>\n              </StyledSelect>\n            </Grid>\n          </Grid>\n\n          <FlexBox justifyContent=\"flex-end\" marginTop={2}>\n            <Button\n              fullWidth\n              variant=\"outlined\"\n              onClick={onClose}\n              sx={{\n                width: 124,\n                fontSize: 12,\n                marginRight: 2,\n                color: \"text.disabled\",\n                borderColor: \"text.disabled\",\n              }}\n            >\n              Cancel\n            </Button>\n            <Button\n              fullWidth\n              type=\"submit\"\n              variant=\"contained\"\n              sx={{ width: 124, fontSize: 12 }}\n            >\n              Save\n            </Button>\n          </FlexBox>\n        </form>\n      </StyledModalCard>\n    </Modal>\n  );\n};\n\nexport default AddCustomerModal;\n","import EditIconButton from \"components/EditIconButton\";\nimport FlexBox from \"components/FlexBox\";\nimport { H6, Small, Tiny } from \"components/Typography\";\nimport UkoAvatar from \"components/UkoAvatar\";\nimport { useState } from \"react\";\nimport AddCustomerModal from \"../AddCustomerModal\";\n\nconst CustomerColumnShape = [\n  {\n    Header: \"Customer Name\",\n    accessor: \"customer\",\n    minWidth: 200,\n    Cell: ({ row }: any) => {\n      const { avatar, name, position } = row.original;\n      return (\n        <FlexBox alignItems=\"center\">\n          <UkoAvatar src={avatar} />\n          <FlexBox flexDirection=\"column\" ml={1.5}>\n            <H6 color=\"text.primary\">{name}</H6>\n            <Tiny color=\"text.disabled\">{position}</Tiny>\n          </FlexBox>\n        </FlexBox>\n      );\n    },\n  },\n  {\n    Header: \"Location\",\n    accessor: \"location\",\n    minWidth: 200,\n  },\n  {\n    Header: \"Date\",\n    accessor: \"date\",\n    minWidth: 150,\n  },\n  {\n    Header: \"Phone\",\n    accessor: \"phone\",\n    minWidth: 150,\n  },\n  {\n    Header: \"Status\",\n    accessor: \"status\",\n    minWidth: 130,\n    maxWidth: 130,\n    Cell: ({ value }: any) => (\n      <Small\n        sx={{\n          backgroundColor:\n            value.toLowerCase() === \"active\" ? \"success.main\" : \"error.main\",\n          color: \"background.paper\",\n          borderRadius: 10,\n          padding: \".2rem 1rem\",\n        }}\n      >\n        {value}\n      </Small>\n    ),\n  },\n  {\n    Header: \"Action\",\n    accessor: \"action\",\n    maxWidth: 100,\n    Cell: ({ row }: any) => {\n      const [openModal, setOpenModal] = useState(false);\n\n      return (\n        <>\n          <EditIconButton onClick={() => setOpenModal(true)} />\n\n          <AddCustomerModal\n            edit\n            open={openModal}\n            data={row.original}\n            onClose={() => setOpenModal(false)}\n          />\n        </>\n      );\n    },\n  },\n];\n\nexport default CustomerColumnShape;\n","import { Add } from \"@mui/icons-material\";\nimport { TabContext, TabList } from \"@mui/lab\";\nimport { Box, Button, Tab } from \"@mui/material\";\nimport AddCustomerModal from \"components/adminEcommerce/AddCustomerModal\";\nimport CustomerColumnShape from \"components/adminEcommerce/columnShapes/CustomerColumnShape\";\nimport CustomTable from \"components/adminEcommerce/CustomTable\";\nimport { customersFakeData } from \"components/adminEcommerce/fakeData\";\nimport TabLabel from \"components/adminEcommerce/TabLabel\";\nimport SearchInput from \"components/SearchInput\";\nimport useTitle from \"hooks/useTitle\";\nimport { FC, SyntheticEvent, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { HeadingWrapper } from \"./ProductList\";\n\nconst CustomerList: FC = () => {\n  // change navbar title\n  useTitle(\"Customer List\");\n  const { t } = useTranslation();\n  const [currentTab, setCurrentTab] = useState(\"1\");\n  const [addCustomer, setAddCustomer] = useState(false);\n\n  // handle tab item change\n  const handleTabChange = (_: SyntheticEvent, newValue: string) => {\n    setCurrentTab(newValue);\n  };\n\n  const filteredData = customersFakeData.filter(\n    (item) =>\n      (item.status === \"Active\" && currentTab === \"2\") ||\n      (item.status === \"Blocked\" && currentTab === \"3\") ||\n      currentTab === \"1\"\n  );\n\n  return (\n    <Box pt={2} pb={4}>\n      <HeadingWrapper justifyContent=\"space-between\" alignItems=\"center\">\n        <SearchInput placeholder=\"Find Customer\" />\n\n        <Button\n          variant=\"contained\"\n          endIcon={<Add />}\n          onClick={() => setAddCustomer(true)}\n        >\n          {t(\"Add Customer\")}\n        </Button>\n\n        <AddCustomerModal\n          open={addCustomer}\n          onClose={() => setAddCustomer(false)}\n        />\n      </HeadingWrapper>\n\n      <TabContext value={currentTab}>\n        <TabList onChange={handleTabChange} variant=\"scrollable\" sx={{ mb: 1 }}>\n          {tabs.map(({ value, label, count }) => (\n            <Tab\n              disableRipple\n              value={value}\n              label={<TabLabel title={t(label)} total={count} />}\n              key={value}\n            />\n          ))}\n        </TabList>\n\n        <CustomTable data={filteredData} columnShape={CustomerColumnShape} />\n      </TabContext>\n    </Box>\n  );\n};\n\nconst tabs = [\n  {\n    value: \"1\",\n    label: \"All\",\n    count: 35,\n  },\n  {\n    value: \"2\",\n    label: \"Active\",\n    count: 45,\n  },\n  {\n    value: \"3\",\n    label: \"Blocked\",\n    count: 25,\n  },\n];\n\nexport default CustomerList;\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M7.41 8.59 12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\"\n}), 'KeyboardArrowDown');","import FlexBox from \"components/FlexBox\";\nimport { H6, Small } from \"components/Typography\";\nimport { FC } from \"react\";\n\n// component props interface\ninterface TabLabelProps {\n  title: string;\n  total: number;\n}\n\nconst TabLabel: FC<TabLabelProps> = ({ title, total }) => {\n  return (\n    <FlexBox alignItems=\"center\" color=\"text.primary\">\n      <H6>{title}</H6>\n      <Small\n        sx={{\n          backgroundColor: \"divider\",\n          padding: \"0px 10px\",\n          borderRadius: \"10px\",\n          marginLeft: 1,\n        }}\n      >\n        {total}\n      </Small>\n    </FlexBox>\n  );\n};\n\nexport default TabLabel;\n"],"sourceRoot":""}