{"version":3,"sources":["components/pricing/PriceCard.tsx","pages/Pricing.tsx","hooks/useTitle.tsx"],"names":["PriceCard","item","Card","Box","sx","padding","borderBottom","borderColor","fontWeight","title","color","subTitle","List","list","map","li","index","ListItem","px","ListItemIcon","CheckCircle","ListItemText","paddingTop","Button","fullWidth","variant","endIcon","ArrowForward","fontSize","btnText","TableHeadCell","styled","TableCell","borderBottomColor","theme","palette","divider","textAlign","TableBodyCell","text","disabled","border","priceList","tableData","Pricing","useTitle","useTheme","py","pb","Grid","container","spacing","lg","md","xs","breakpoints","down","overflowX","Table","TableHead","TableRow","TableBody","useContext","TitleContext","setTitle","useEffect"],"mappings":"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","file":"static/js/48.1b0e608c.chunk.js","sourcesContent":["import { ArrowForward, CheckCircle } from \"@mui/icons-material\";\nimport {\n  Box,\n  Button,\n  Card,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\nimport { H1, H6 } from \"components/Typography\";\nimport React, { FC } from \"react\";\n\n// component props interface\ninterface PriceCardProps {\n  item: {\n    title: string;\n    subTitle: string;\n    list: string[];\n    btnText: string;\n  };\n}\n\nconst PriceCard: FC<PriceCardProps> = ({ item }) => {\n  return (\n    <Card>\n      <Box\n        sx={{\n          padding: 4,\n          borderBottom: 1,\n          borderColor: \"divider\",\n        }}\n      >\n        <H1 fontWeight={700}>{item.title}</H1>\n        <H6 color=\"text.disabled\">{item.subTitle}</H6>\n      </Box>\n\n      <Box padding={4}>\n        <List>\n          {item.list.map((li, index) => (\n            <ListItem sx={{ px: 0 }} key={index}>\n              <ListItemIcon>\n                <CheckCircle sx={{ color: \"primary.main\" }} />\n              </ListItemIcon>\n              <ListItemText\n                sx={{\n                  \"& .MuiTypography-root\": {\n                    fontWeight: 500,\n                    color: \"text.disabled\",\n                  },\n                }}\n              >\n                {li}\n              </ListItemText>\n            </ListItem>\n          ))}\n        </List>\n      </Box>\n\n      <Box padding={4} paddingTop={0}>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          endIcon={<ArrowForward fontSize=\"large\" />}\n        >\n          {item.btnText}\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nexport default PriceCard;\n","import {\n  Box,\n  Grid,\n  styled,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  useTheme,\n} from \"@mui/material\";\nimport PriceCard from \"components/pricing/PriceCard\";\nimport { H1, H6 } from \"components/Typography\";\nimport useTitle from \"hooks/useTitle\";\nimport { FC } from \"react\";\n\n/// styled components\nconst TableHeadCell = styled(TableCell)(({ theme }) => ({\n  fontSize: 21,\n  fontWeight: 700,\n  borderBottomColor: theme.palette.divider,\n  \"&:not(:first-of-type)\": { textAlign: \"center\" },\n}));\n\nconst TableBodyCell = styled(TableCell)(({ theme }) => ({\n  fontWeight: 500,\n  color: theme.palette.text.disabled,\n  borderBottomColor: theme.palette.divider,\n  border: `1px solid ${theme.palette.divider}`,\n  \"&:not(:first-of-type)\": { textAlign: \"center\" },\n  \"&:last-of-type\": { borderBottom: `1px solid ${theme.palette.divider}` },\n}));\n\nconst Pricing: FC = () => {\n  // change navbar title\n  useTitle(\"Pricing\");\n\n  const theme = useTheme();\n  return (\n    <Box py={4}>\n      <Box textAlign=\"center\" pb={6}>\n        <H1 fontSize={36} fontWeight={700}>\n          A Great Experience is Priceless.\n        </H1>\n        <H6 color=\"text.disabled\" fontWeight={500}>\n          A better experience for developers creates a better experience for\n          users.\n        </H6>\n      </Box>\n\n      <Box pb={8}>\n        <Grid container spacing={3}>\n          {priceList.map((item, index) => (\n            <Grid item lg={4} md={6} xs={12} key={index}>\n              <PriceCard item={item} />\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n\n      <Box pb={6}>\n        <Box textAlign=\"center\" py={4}>\n          <H1 fontSize={36} fontWeight={700}>\n            Compare Plans\n          </H1>\n          <H6 color=\"text.disabled\" fontWeight={500}>\n            A better experience for developers creates a better experience for\n            users.\n          </H6>\n        </Box>\n\n        <Box\n          sx={{\n            [theme.breakpoints.down(\"sm\")]: {\n              overflowX: \"auto\",\n            },\n          }}\n        >\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableHeadCell>Features</TableHeadCell>\n                <TableHeadCell>Hobby</TableHeadCell>\n                <TableHeadCell>Professional</TableHeadCell>\n                <TableHeadCell>Enterprise</TableHeadCell>\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {tableData.map((item, index) => (\n                <TableRow key={index}>\n                  <TableBodyCell>{item[0]}</TableBodyCell>\n                  <TableBodyCell>{item[1]}</TableBodyCell>\n                  <TableBodyCell>{item[2]}</TableBodyCell>\n                  <TableBodyCell>{item[3]}</TableBodyCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst priceList = [\n  {\n    title: \"Hobby\",\n    subTitle: \"Free for non-commercial sites\",\n    list: [\n      \"For non-commercial & hobby sites\",\n      \"Deploy from CLI or personal git integrations\",\n      \"Built-in CI/CD\",\n      \"Previews for every git push\",\n      \"Email support\",\n    ],\n    btnText: \"Deploy Hobby Project\",\n  },\n  {\n    title: \"Professional\",\n    subTitle: \"$20/mo per member\",\n    list: [\n      \"For non-commercial & hobby sites\",\n      \"Deploy from CLI or personal git integrations\",\n      \"Built-in CI/CD\",\n      \"Previews for every git push\",\n      \"Email support\",\n    ],\n    btnText: \"Start free 14 day pro trial\",\n  },\n  {\n    title: \"Enterprise\",\n    subTitle: \"Suited to your business\",\n    list: [\n      \"Maximize developer productivity\",\n      \"SSO/SAML\",\n      \"Scaled bandwidth pricing\",\n      \"Isolated infrastructure for the fastest builds & zero queues\",\n      \"Dedicated support manager & SLAs\",\n    ],\n    btnText: \"Contact Sales\",\n  },\n];\n\nconst tableData = [\n  [\"Bandwidth\", \"100 GB\", \"1 TB\", \"Custom\"],\n  [\"Serverless Function Execution\", \"100 GB\", \"1,000 GB\", \"Custom\"],\n  [\n    \"Serverless Function Execution Timeout\",\n    \"5 seconds\",\n    \"15 seconds\",\n    \"30 seconds\",\n  ],\n  [\"Image Optimization\", \"1000\", \"5000\", \"Custom\"],\n  [\"Multi-Region Serverless Functions\", \"\", \"\", \"Custom\"],\n];\n\nexport default Pricing;\n","import { TitleContext } from \"contexts/TitleContext\";\nimport { useContext, useEffect } from \"react\";\n\nconst useTitle = (text: string) => {\n  const { title, setTitle } = useContext(TitleContext);\n\n  useEffect(() => setTitle(text), [text, setTitle]);\n\n  return title;\n};\n\nexport default useTitle;\n"],"sourceRoot":""}