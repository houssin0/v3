{"version":3,"sources":["../node_modules/@mui/material/Table/Tablelvl2Context.js","../node_modules/@mui/material/Table/TableContext.js","../node_modules/react-table/index.js","../node_modules/@mui/material/TableRow/tableRowClasses.js","../node_modules/@mui/material/TableRow/TableRow.js","../node_modules/@mui/material/TableCell/tableCellClasses.js","../node_modules/@mui/material/TableCell/TableCell.js","../node_modules/@mui/material/Table/tableClasses.js","../node_modules/@mui/material/Table/Table.js","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js","../node_modules/@mui/material/TableBody/tableBodyClasses.js","../node_modules/@mui/material/TableBody/TableBody.js","../../src/publicUtils.js","../../src/utils.js","../../src/makeDefaultPluginHooks.js","../../src/hooks/useColumnVisibility.js","../../src/hooks/useTable.js","../../src/plugin-hooks/useExpanded.js","../../src/filterTypes.js","../../src/plugin-hooks/useFilters.js","../../src/plugin-hooks/useGlobalFilter.js","../../src/aggregations.js","../../src/plugin-hooks/useGroupBy.js","../../src/sortTypes.js","../../src/plugin-hooks/useSortBy.js","../../src/plugin-hooks/usePagination.js","../../src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../../src/plugin-hooks/useRowSelect.js","../../src/plugin-hooks/useRowState.js","../../src/plugin-hooks/useColumnOrder.js","../../src/plugin-hooks/useResizeColumns.js","../../src/plugin-hooks/useAbsoluteLayout.js","../../src/plugin-hooks/useBlockLayout.js","../../src/plugin-hooks/useFlexLayout.js","../../src/plugin-hooks/useGridLayout.js"],"names":["Tablelvl2Context","React","TableContext","module","exports","require","getTableRowUtilityClass","slot","generateUtilityClass","tableRowClasses","generateUtilityClasses","_excluded","TableRowRoot","styled","name","overridesResolver","props","styles","ownerState","root","head","footer","theme","color","display","verticalAlign","outline","hover","backgroundColor","palette","action","selected","alpha","primary","main","selectedOpacity","hoverOpacity","TableRow","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","tablelvl2","_extends","variant","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","role","getTableCellUtilityClass","tableCellClasses","TableCellRoot","capitalize","size","padding","align","stickyHeader","typography","body2","borderBottom","mode","lighten","divider","darken","textAlign","text","lineHeight","pxToRem","fontWeight","fontWeightMedium","secondary","fontSize","paddingCheckbox","width","flexDirection","position","top","zIndex","background","default","TableCell","componentProp","paddingProp","scopeProp","scope","sizeProp","sortDirection","variantProp","table","isHeadCell","ariaSort","getTableUtilityClass","TableRoot","borderCollapse","borderSpacing","spacing","captionSide","defaultComponent","Table","Provider","value","children","getTableHeadUtilityClass","TableHeadRoot","TableHead","getTableBodyUtilityClass","TableBodyRoot","TableBody","actions","init","defaultRenderer","emptyRenderer","defaultColumn","Cell","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","reduce","next","style","makePropGetter","hooks","meta","userProps","prev","handlePropGetter","prevProps","Array","isArray","reduceHooks","initial","allowUndefined","loopHooks","context","forEach","hook","ensurePluginOrder","plugins","befores","pluginName","afters","findIndex","plugin","before","functionalUpdate","updater","old","useGetLatest","obj","useRef","current","useCallback","safeUseLayoutEffect","document","useLayoutEffect","useEffect","useMountedLayoutEffect","fn","deps","mountedRef","makeRenderer","instance","column","type","Comp","console","info","Error","flexRender","proto","Object","getPrototypeOf","prototype","isReactComponent","$$typeof","includes","description","linkColumnStructure","columns","parent","depth","map","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","Header","accessorPath","split","path","def","val","cacheKey","JSON","stringify","pathObj","pathObjCache","get","flattenDeep","arr","newArr","i","length","push","String","d","replace","join","reOpenBracket","reCloseBracket","set","cursor","pathPart","e","row","error","assign","decorateColumn","userDefaultColumn","Footer","originalWidth","makeHeaderGroups","allColumns","additionalHeaderProperties","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","some","newParent","latestParentColumn","reverse","originalId","placeholderOf","Map","getFirstDefined","args","isFunction","a","key","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","addToExpandedRows","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","defaultGetTableProps","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","index","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","state","hiddenColumns","onChange","toggleHidden","target","checked","isVisible","title","allColumnsHidden","indeterminate","previousState","initialState","columnId","handleColumn","parentVisible","subColumn","subHeader","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","calculateHeaderWidths","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","subHeaders","header","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRowsForColumn","data","flatRows","rowsById","accessValueHooks","originalRow","rowIndex","accessRow","parentRows","originalSubRows","cells","values","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","onClick","isAllRowsExpanded","keys","rowId","setExpanded","exists","shouldExist","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","Boolean","useMemo","expandedDepth","maxDepth","splitId","preExpandedRows","ids","filterValue","rowValue","toLowerCase","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","Infinity","temp","resetFilters","setFilter","setAllFilters","useFilters","filters","find","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","undefined","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","c","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","mid","floor","nums","sort","b","from","Set","emptyArray","emptyObject","resetGroupBy","setGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","resolvedGroupBy","groupByColumns","col","g","nonGroupByColumns","isGrouped","groupedIndex","indexOf","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupedRows","groupUpRecursively","parentId","rowGroupsMap","entries","groupByVal","leafRows","aggregateFn","aggregate","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","allCells","isPlaceholder","isAggregated","resKey","reSplitAlphaNumeric","compareBasic","getRowValuesByColumnID","row1","row2","toString","isNaN","rowA","rowB","aa","shift","bb","an","parseInt","bn","combo","getTime","alower","blower","replaceNonNumeric","resetSortBy","setSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","sortAction","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","slice","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","newMaterialized","buildPivotColumns","pivotFilters","pivotColumn","u","columnGroup","PivotHeader","uniqueValue","isPivotGroup","pivotValue","sourceColumn","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","toggleAllPageRowsSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","getToggleAllPageRowsSelectedProps","defaultGetToggleAllPageRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","isAllPageRowsSelected","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","allChildrenSelected","someSelected","getAutoResetSelectedRows","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","resetResize","useResizeColumns","getResizerProps","defaultGetResizerProps","onResizeStart","isTouchEvent","touches","headerIdWidths","leafHeaders","recurseHeader","clientX","round","dispatchMove","clientXPos","dispatchEnd","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","removeEventListener","touch","cancelable","preventDefault","stopPropagation","events","passiveIfSupported","supported","options","window","addEventListener","err","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","autoResetResize","getAutoResetResize","resetResizing","cellStyles","useAbsoluteLayout","getRowStyles","totalColumnsWidth","boxSizing","useBlockLayout","useFlexLayout","totalColumnsMinWidth","flex","useGridLayout","gridTemplateColumns","gridLayout","w","columnIndex","elWidth","getElementById","offsetWidth","startingWidth","newWidth","columnWidthsCopy","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","promise","Promise","resolve","reject","timeout","clearTimeout","setTimeout","userColumns","getStateReducer","s","handler","useReducer","reducerState","allColumnsQueue","initialRows","all","visibleColumnsDep","totalColumnsMaxWidth","render","footerGroups"],"mappings":"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","file":"static/js/0.411665b1.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst Tablelvl2Context = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst TableContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getTableRowUtilityClass(slot) {\n  return generateUtilityClass('MuiTableRow', slot);\n}\nconst tableRowClasses = generateUtilityClasses('MuiTableRow', ['root', 'selected', 'hover', 'head', 'footer']);\nexport default tableRowClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\", \"hover\", \"selected\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { alpha } from '@mui/system';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tableRowClasses, { getTableRowUtilityClass } from './tableRowClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    selected,\n    hover,\n    head,\n    footer\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', hover && 'hover', head && 'head', footer && 'footer']\n  };\n  return composeClasses(slots, getTableRowUtilityClass, classes);\n};\n\nconst TableRowRoot = styled('tr', {\n  name: 'MuiTableRow',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.head && styles.head, ownerState.footer && styles.footer];\n  }\n})(({\n  theme\n}) => ({\n  color: 'inherit',\n  display: 'table-row',\n  verticalAlign: 'middle',\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  [`&.${tableRowClasses.hover}:hover`]: {\n    backgroundColor: theme.palette.action.hover\n  },\n  [`&.${tableRowClasses.selected}`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n    }\n  }\n}));\nconst defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nconst TableRow = /*#__PURE__*/React.forwardRef(function TableRow(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableRow'\n  });\n\n  const {\n    className,\n    component = defaultComponent,\n    hover = false,\n    selected = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n\n  const ownerState = _extends({}, props, {\n    component,\n    hover,\n    selected,\n    head: tablelvl2 && tablelvl2.variant === 'head',\n    footer: tablelvl2 && tablelvl2.variant === 'footer'\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableRowRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    role: component === defaultComponent ? null : 'row',\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   * @default false\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   * @default false\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default TableRow;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getTableCellUtilityClass(slot) {\n  return generateUtilityClass('MuiTableCell', slot);\n}\nconst tableCellClasses = generateUtilityClasses('MuiTableCell', ['root', 'head', 'body', 'footer', 'sizeSmall', 'sizeMedium', 'paddingCheckbox', 'paddingNone', 'alignLeft', 'alignCenter', 'alignRight', 'alignJustify', 'stickyHeader']);\nexport default tableCellClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { darken, alpha, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tableCellClasses, { getTableCellUtilityClass } from './tableCellClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    align,\n    padding,\n    size,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, stickyHeader && 'stickyHeader', align !== 'inherit' && `align${capitalize(align)}`, padding !== 'normal' && `padding${capitalize(padding)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getTableCellUtilityClass, classes);\n};\n\nconst TableCellRoot = styled('td', {\n  name: 'MuiTableCell',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`size${capitalize(ownerState.size)}`], ownerState.padding !== 'normal' && styles[`padding${capitalize(ownerState.padding)}`], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body2, {\n  display: 'table-cell',\n  verticalAlign: 'inherit',\n  // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n  borderBottom: `1px solid\n    ${theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)}`,\n  textAlign: 'left',\n  padding: 16\n}, ownerState.variant === 'head' && {\n  color: theme.palette.text.primary,\n  lineHeight: theme.typography.pxToRem(24),\n  fontWeight: theme.typography.fontWeightMedium\n}, ownerState.variant === 'body' && {\n  color: theme.palette.text.primary\n}, ownerState.variant === 'footer' && {\n  color: theme.palette.text.secondary,\n  lineHeight: theme.typography.pxToRem(21),\n  fontSize: theme.typography.pxToRem(12)\n}, ownerState.size === 'small' && {\n  padding: '6px 16px',\n  [`&.${tableCellClasses.paddingCheckbox}`]: {\n    width: 24,\n    // prevent the checkbox column from growing\n    padding: '0 12px 0 16px',\n    '& > *': {\n      padding: 0\n    }\n  }\n}, ownerState.padding === 'checkbox' && {\n  width: 48,\n  // prevent the checkbox column from growing\n  padding: '0 0 0 4px'\n}, ownerState.padding === 'none' && {\n  padding: 0\n}, ownerState.align === 'left' && {\n  textAlign: 'left'\n}, ownerState.align === 'center' && {\n  textAlign: 'center'\n}, ownerState.align === 'right' && {\n  textAlign: 'right',\n  flexDirection: 'row-reverse'\n}, ownerState.align === 'justify' && {\n  textAlign: 'justify'\n}, ownerState.stickyHeader && {\n  position: 'sticky',\n  top: 0,\n  zIndex: 2,\n  backgroundColor: theme.palette.background.default\n}));\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nconst TableCell = /*#__PURE__*/React.forwardRef(function TableCell(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableCell'\n  });\n\n  const {\n    align = 'inherit',\n    className,\n    component: componentProp,\n    padding: paddingProp,\n    scope: scopeProp,\n    size: sizeProp,\n    sortDirection,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const table = React.useContext(TableContext);\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n  const isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  let component;\n\n  if (componentProp) {\n    component = componentProp;\n  } else {\n    component = isHeadCell ? 'th' : 'td';\n  }\n\n  let scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n\n  const variant = variantProp || tablelvl2 && tablelvl2.variant;\n\n  const ownerState = _extends({}, props, {\n    align,\n    component,\n    padding: paddingProp || (table && table.padding ? table.padding : 'normal'),\n    size: sizeProp || (table && table.size ? table.size : 'medium'),\n    sortDirection,\n    stickyHeader: variant === 'head' && table && table.stickyHeader,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return /*#__PURE__*/_jsx(TableCellRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    \"aria-sort\": ariaSort,\n    scope: scope,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * The prop defaults to the value (`'default'`) inherited from the parent Table component.\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Specify the cell type.\n   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.\n   */\n  variant: PropTypes.oneOf(['body', 'footer', 'head'])\n} : void 0;\nexport default TableCell;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getTableUtilityClass(slot) {\n  return generateUtilityClass('MuiTable', slot);\n}\nconst tableClasses = generateUtilityClasses('MuiTable', ['root', 'stickyHeader']);\nexport default tableClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport TableContext from './TableContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableUtilityClass } from './tableClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', stickyHeader && 'stickyHeader']\n  };\n  return composeClasses(slots, getTableUtilityClass, classes);\n};\n\nconst TableRoot = styled('table', {\n  name: 'MuiTable',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'table',\n  width: '100%',\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  '& caption': _extends({}, theme.typography.body2, {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n    textAlign: 'left',\n    captionSide: 'bottom'\n  })\n}, ownerState.stickyHeader && {\n  borderCollapse: 'separate'\n}));\nconst defaultComponent = 'table';\nconst Table = /*#__PURE__*/React.forwardRef(function Table(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTable'\n  });\n\n  const {\n    className,\n    component = defaultComponent,\n    padding = 'normal',\n    size = 'medium',\n    stickyHeader = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    padding,\n    size,\n    stickyHeader\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const table = React.useMemo(() => ({\n    padding,\n    size,\n    stickyHeader\n  }), [padding, size, stickyHeader]);\n  return /*#__PURE__*/_jsx(TableContext.Provider, {\n    value: table,\n    children: /*#__PURE__*/_jsx(TableRoot, _extends({\n      as: component,\n      role: component === defaultComponent ? null : 'table',\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * @default 'normal'\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE11.\n   * @default false\n   */\n  stickyHeader: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Table;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\n\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default TableHead;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getTableBodyUtilityClass(slot) {\n  return generateUtilityClass('MuiTableBody', slot);\n}\nconst tableBodyClasses = generateUtilityClasses('MuiTableBody', ['root']);\nexport default tableBodyClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableBodyUtilityClass } from './tableBodyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableBodyUtilityClass, classes);\n};\n\nconst TableBodyRoot = styled('tbody', {\n  name: 'MuiTableBody',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-row-group'\n});\nconst tablelvl2 = {\n  variant: 'body'\n};\nconst defaultComponent = 'tbody';\nconst TableBody = /*#__PURE__*/React.forwardRef(function TableBody(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableBody'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableBodyRoot, _extends({\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default TableBody;","import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultRenderer = ({ value = '' }) => value;\nexport const emptyRenderer = () => <>&nbsp;</>;\n\nexport const defaultColumn = {\n  Cell: defaultRenderer,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import { defaultColumn, emptyRenderer } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: emptyRenderer,\n    Footer: emptyRenderer,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(\n  allColumns,\n  defaultColumn,\n  additionalHeaderProperties = () => ({})\n) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n            ...additionalHeaderProperties(column),\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n              ...additionalHeaderProperties(column),\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = (row, addToExpandedRows = true) => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    if (addToExpandedRows) {\n      expandedRows.push(row)\n    }\n\n    if (row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(row => handleRow(row, expandSubRows))\n    }\n  }\n\n  rows.forEach(row => handleRow(row))\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(\n        originalRow,\n        rowIndex,\n        row,\n        parentRows,\n        data\n      )\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { isAllRowsExpanded, rowsById } = instance\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = values[0] || 0\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = [...values].sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.setGroupBy = 'setGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.setGroupBy) {\n    const { value } = action\n    return {\n      ...state,\n      groupBy: value,\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  const setGroupBy = React.useCallback(\n    value => {\n      dispatch({ type: actions.setGroupBy, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          // Get the columnValues to aggregate\n          const groupedValues = groupedRows.map(row => row.values[column.id])\n\n          // Get the columnValues to aggregate\n          const leafValues = leafRows.map(row => {\n            let columnValue = row.values[column.id]\n\n            if (!depth && column.aggregateValue) {\n              const aggregateValueFn =\n                typeof column.aggregateValue === 'function'\n                  ? column.aggregateValue\n                  : userAggregations[column.aggregateValue] ||\n                    aggregations[column.aggregateValue]\n\n              if (!aggregateValueFn) {\n                console.info({ column })\n                throw new Error(\n                  `React Table: Invalid column.aggregateValue option for column listed above`\n                )\n              }\n\n              columnValue = aggregateValueFn(columnValue, row, column)\n            }\n            return columnValue\n          })\n\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n    setGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated =\n      !cell.isGrouped && !cell.isPlaceholder && row.subRows?.length\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\nexport function datetime(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\nexport function string(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.split('').filter(Boolean)\n  b = b.split('').filter(Boolean)\n\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    let alower = aa.toLowerCase()\n    let blower = bb.toLowerCase()\n\n    // Case insensitive comparison until characters match\n    if (alower > blower) {\n      return 1\n    }\n    if (blower > alower) {\n      return -1\n    }\n    // If lowercase characters are identical\n    if (aa > bb) {\n      return 1\n    }\n    if (bb > aa) {\n      return -1\n    }\n    continue\n  }\n\n  return a.length - b.length\n}\n\nexport function number(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  const replaceNonNumeric = /[^0-9.]/gi\n\n  a = Number(String(a).replace(replaceNonNumeric, ''))\n  b = Number(String(b).replace(replaceNonNumeric, ''))\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValuesByColumnID(row1, row2, columnId) {\n  return [row1.values[columnId], row2.values[columnId]]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.setSortBy = 'setSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.setSortBy) {\n    const { sortBy } = action\n    return {\n      ...state,\n      sortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1 || sortBy.length !== 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  const setSortBy = React.useCallback(\n    sortBy => {\n      dispatch({ type: actions.setSortBy, sortBy })\n    },\n    [dispatch]\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length === 0) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    setSortBy,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\nactions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.getToggleAllPageRowsSelectedProps = [\n    defaultGetToggleAllPageRowsSelectedProps,\n  ]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nconst defaultGetToggleAllPageRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange(e) {\n      instance.toggleAllPageRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllPageRowsSelected,\n    title: 'Toggle All Current Page Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllPageRowsSelected &&\n        instance.page.some(({ id }) => instance.state.selectedRowIds[id])\n    ),\n  },\n]\n\n// eslint-disable-next-line max-params\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true, getSubRows } = instance\n    const isSelected = state.selectedRowIds[id]\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (shouldExist) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleAllPageRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      page,\n      rowsById,\n      selectSubRows = true,\n      isAllPageRowsSelected,\n      getSubRows,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllPageRowsSelected\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (selectAll) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    page.forEach(row => handleRowById(row.id))\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n  return state\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n    page,\n    getSubRows,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds, getSubRows)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds, getSubRows])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  let isAllPageRowsSelected = isAllRowsSelected\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  if (!isAllRowsSelected) {\n    if (page && page.length && page.some(({ id }) => !selectedRowIds[id])) {\n      isAllPageRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleAllPageRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllPageRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  const getToggleAllPageRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllPageRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    isAllPageRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n    getToggleAllPageRowsSelectedProps,\n    toggleAllPageRowsSelected,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds, getSubRows) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  const subRows = getSubRows(row)\n\n  if (subRows && subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = row => ({})\nconst defaultInitialCellStateAccessor = cell => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(\n            rowsById[rowId]?.cells?.find(cell => cell.column.id === columnId)\n          )\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(cell)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    const dispatchMove = clientXPos => {\n      dispatch({ type: actions.columnResizing, clientX: clientXPos })\n    }\n    const dispatchEnd = () => dispatch({ type: actions.columnDoneResizing })\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => dispatchMove(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          dispatchMove(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'col-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths = [] } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n","export function useGridLayout(hooks) {\n  hooks.stateReducers.push(reducer)\n  hooks.getTableProps.push(getTableProps)\n  hooks.getHeaderProps.push(getHeaderProps)\n}\n\nuseGridLayout.pluginName = 'useGridLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: `grid`,\n      gridTemplateColumns: instance.state.gridLayout.columnWidths.map(w => w).join(` `),\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    id: `header-cell-${column.id}`,\n    style: {\n      position: `sticky` //enables a scroll wrapper to be placed around the table and have sticky headers\n    },\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === `init`) {\n    return {\n      gridLayout: {\n        columnWidths: instance.columns.map(() => `auto`),\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === `columnStartResizing`) {\n    const { columnId } = action\n    const columnIndex = instance.visibleColumns.findIndex(col => col.id === columnId)\n    const elWidth = getElementWidth(columnId)\n\n    if (elWidth !== undefined) {\n      return {\n        ...state,\n        gridLayout: {\n          ...state.gridLayout,\n          columnId,\n          columnIndex,\n          startingWidth: elWidth\n        },\n      }\n    } else {\n      return state\n    }\n  }\n\n  if (action.type === `columnResizing`) {\n    const {\n      columnIndex,\n      startingWidth,\n      columnWidths,\n    } = state.gridLayout\n\n    const change = state.columnResizing.startX - action.clientX\n    const newWidth = startingWidth - change\n    const columnWidthsCopy = [...columnWidths]\n    columnWidthsCopy[columnIndex] = `${newWidth}px`\n\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        columnWidths: columnWidthsCopy,\n      },\n    }\n  }\n}\n\nfunction getElementWidth(columnId) {\n  const width = document.getElementById(`header-cell-${columnId}`)?.offsetWidth\n\n  if (width !== undefined) {\n    return width\n  }\n}"],"sourceRoot":""}