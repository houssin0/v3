{"version":3,"sources":["pages/authentication/Register.tsx","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js"],"names":["Register","register","useAuth","useState","error","setError","loading","setLoading","validationSchema","Yup","shape","name","required","email","max","password","min","useFormik","initialValues","terms","submit","onSubmit","values","then","response","toast","success","console","log","catch","message","errors","touched","handleBlur","handleChange","handleSubmit","sx","alignItems","flexDirection","justifyContent","height","sm","padding","maxWidth","boxShadow","mb","width","src","alt","fontSize","fontWeight","flexWrap","my","startIcon","mr","color","px","noValidate","style","fullWidth","type","label","onBlur","onChange","value","Boolean","helperText","mt","control","disableRipple","checked","marginTop","textAlign","variant","margin","to","createSvgIcon","_jsx","d","getCheckboxUtilityClass","slot","generateUtilityClass","checkboxClasses","generateUtilityClasses","_excluded","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","ownerState","root","indeterminate","capitalize","theme","_extends","palette","text","secondary","backgroundColor","alpha","action","active","main","hoverOpacity","disabled","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","React","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","size","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses"],"mappings":"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","file":"static/js/51.c4e1c661.chunk.js","sourcesContent":["import { LoadingButton } from \"@mui/lab\";\nimport {\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  FormHelperText,\n} from \"@mui/material\";\nimport {\n  SocialIconButton,\n  TextFieldWrapper,\n} from \"components/authentication/StyledComponents\";\nimport FlexBox from \"components/FlexBox\";\nimport LightTextField from \"components/LightTextField\";\nimport { H1, H3, Small } from \"components/Typography\";\nimport { useFormik } from \"formik\";\nimport useAuth from \"hooks/useAuth\";\nimport FacebookIcon from \"icons/FacebookIcon\";\nimport GoogleIcon from \"icons/GoogleIcon\";\nimport { FC, useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { Link } from \"react-router-dom\";\nimport * as Yup from \"yup\";\n\nconst Register: FC = () => {\n  const { register } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const initialValues = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    terms: true,\n    submit: null,\n  };\n  // form field value validation schema\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required\"),\n    email: Yup.string()\n      .email(\"Must be a valid email\")\n      .max(255)\n      .required(\"Email is required\"),\n    password: Yup.string()\n      .min(6, \"Password should be of minimum 6 characters length\")\n      .required(\"Password is required\"),\n  });\n\n  const { errors, values, touched, handleBlur, handleChange, handleSubmit } =\n    useFormik({\n      initialValues,\n      validationSchema,\n      onSubmit: (values) => {\n        setLoading(true);\n\n        register(values.email, values.password, values.name)\n          .then((response) => {\n            setLoading(false);\n            toast.success(\"You registered successfully\");\n            console.log(response);\n          })\n          .catch((error) => {\n            setError(error.message);\n            setLoading(false);\n          });\n      },\n    });\n\n  return (\n    <FlexBox\n      sx={{\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        height: { sm: \"100%\" },\n      }}\n    >\n      <Card sx={{ padding: 4, maxWidth: 600, boxShadow: 1 }}>\n        <FlexBox\n          alignItems=\"center\"\n          flexDirection=\"column\"\n          justifyContent=\"center\"\n          mb={5}\n        >\n          <Box width={38} mb={1}>\n            <img src=\"/static/logo/logo.svg\" width=\"100%\" alt=\"Uko Logo\" />\n          </Box>\n          <H1 fontSize={24} fontWeight={700}>\n            Get started with Uko\n          </H1>\n        </FlexBox>\n\n        <FlexBox justifyContent=\"space-between\" flexWrap=\"wrap\" my=\"1rem\">\n          <SocialIconButton\n            // onClick={loginWithGoogle}\n            startIcon={<GoogleIcon sx={{ mr: \"0.5rem\" }} />}\n          >\n            Sign up with Google\n          </SocialIconButton>\n          <SocialIconButton\n            // onClick={loginWithFacebook}\n            startIcon={<FacebookIcon sx={{ mr: \"0.5rem\" }} />}\n          >\n            Sign up with Facebook\n          </SocialIconButton>\n\n          <Divider sx={{ my: 3, width: \"100%\", alignItems: \"flex-start\" }}>\n            <H3 color=\"text.disabled\" px={1}>\n              Or\n            </H3>\n          </Divider>\n\n          <form noValidate onSubmit={handleSubmit} style={{ width: \"100%\" }}>\n            <FlexBox justifyContent=\"space-between\" flexWrap=\"wrap\">\n              <TextFieldWrapper>\n                <LightTextField\n                  fullWidth\n                  name=\"name\"\n                  type=\"text\"\n                  label=\"Name\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.name || \"\"}\n                  error={Boolean(touched.name && errors.name)}\n                  helperText={touched.name && errors.name}\n                />\n              </TextFieldWrapper>\n\n              <TextFieldWrapper>\n                <LightTextField\n                  fullWidth\n                  name=\"email\"\n                  type=\"email\"\n                  label=\"Email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.email || \"\"}\n                  error={Boolean(touched.email && errors.email)}\n                  helperText={touched.email && errors.email}\n                />\n              </TextFieldWrapper>\n            </FlexBox>\n\n            <TextFieldWrapper sx={{ mt: 2, width: \"100%\" }}>\n              <LightTextField\n                fullWidth\n                name=\"password\"\n                type=\"password\"\n                label=\"Password\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={values.password || \"\"}\n                error={Boolean(touched.password && errors.password)}\n                helperText={touched.password && errors.password}\n              />\n            </TextFieldWrapper>\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  disableRipple\n                  checked={values.terms}\n                  onChange={handleChange}\n                  name=\"terms\"\n                />\n              }\n              label=\"I agree to terms & conditions\"\n              sx={{\n                marginTop: \"0.5rem\",\n                \"& .MuiTypography-root\": { fontWeight: 600 },\n              }}\n            />\n\n            {error && (\n              <FormHelperText\n                error\n                sx={{\n                  mt: 2,\n                  fontSize: 13,\n                  fontWeight: 500,\n                  textAlign: \"center\",\n                }}\n              >\n                {error}\n              </FormHelperText>\n            )}\n\n            <Box sx={{ mt: 4 }}>\n              {loading ? (\n                <LoadingButton loading fullWidth variant=\"contained\">\n                  Sign Up\n                </LoadingButton>\n              ) : (\n                <Button fullWidth type=\"submit\" variant=\"contained\">\n                  Sign Up\n                </Button>\n              )}\n            </Box>\n          </form>\n\n          <Small margin=\"auto\" mt={3} color=\"text.disabled\">\n            Do you already have an account?{\" \"}\n            <Link to=\"/login\">\n              <Small color=\"primary.main\">Log in</Small>\n            </Link>\n          </Small>\n        </FlexBox>\n      </Card>\n    </FlexBox>\n  );\n};\n\nexport default Register;\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;"],"sourceRoot":""}